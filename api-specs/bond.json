{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Finnhub API - Bond",
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Finnhub API endpoints for bond"
  },
  "host": "finnhub.io",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "paths": {
    "/bond/price": {
      "get": {
        "summary": "Bond price data",
        "description": "<p>Get bond's price data. The following datasets are supported:</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Exchange</th>\n      <th>Segment</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n  <tr>\n      <td class=\"text-blue\">US Government Bonds</th>\n      <td>Government Bonds</td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>BTDS: US Corporate Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>144A Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n  </tbody>\n</table>",
        "operationId": "bond-price",
        "navHeader": "Bond Price",
        "urlId": "bond-price",
        "title": "Bond price API | Corporate bonds API",
        "examples": [
          {
            "url": "/bond/price?isin=US912810TD00&from=1590988249&to=1649099548&token=<token>",
            "text": "/bond/price?isin=US912810TD00&from=1590988249&to=1649099548"
          }
        ],
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Bonds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "isin",
            "description": "ISIN.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "UNIX timestamp. Interval initial value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "to",
            "description": "UNIX timestamp. Interval end value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/BondCandles"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.bond_price('US912810TD00', 1590988249, 1649099548))",
          "go": "res, _, err := finnhubClient.BondPrice(context.Background()).Isin(\"US912810TD00\").From(1590988249).To(1649099548).Execute()",
          "javascript": "finnhubClient.bondPrice(\"US912810TD00\", 1590988249, 1649099548, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.bond_price('US912810TD00', 1590988249, 1649099548))",
          "kotlin": "println(apiClient.bondPrice(\"US912810TD00\", 1590988249, 1649099548))",
          "php": "print_r($client->bondPrice(\"US912810TD00\", 1590988249, 1649099548));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\":[\n    97.5,\n    97.96875,\n    98.78125,\n  ],\n  \"s\":\"ok\",\n  \"t\":[\n    1644883200,\n    1644969600,\n    1645056000,\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/bond/profile": {
      "get": {
        "summary": "Bond Profile",
        "description": "Get general information of a bond. You can query by FIGI, ISIN or CUSIP. A list of supported bonds can be found <a href=\"/api/v1/bond/list?token=\" target=\"_blank\">here</a>.",
        "operationId": "bond-profile",
        "navHeader": "Bond Profile",
        "urlId": "bond-profile",
        "title": "Bond Profile & Fundamental Data",
        "examples": [
          {
            "url": "/bond/profile?figi=BBG0152KFHS6&token=<token>",
            "text": "/bond/profile?figi=BBG0152KFHS6"
          },
          {
            "url": "/bond/profile?isin=US912810TD00&token=<token>",
            "text": "/bond/profile?isin=US912810TD00"
          },
          {
            "url": "/bond/profile?cusip=912810TD0&token=<token>",
            "text": "/bond/profile?cusip=912810TD0"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Bonds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "isin",
            "description": "ISIN",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cusip",
            "description": "CUSIP",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "figi",
            "description": "FIGI",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/BondProfile"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.bond_profile(isin='US912810TD00'))",
          "go": "res, _, err := finnhubClient.BondProfile(context.Background()).Isin(\"US912810TD00\").Execute()",
          "javascript": "finnhubClient.bondProfile({'isin': 'US912810TD00'}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.bond_profile({isin: 'US912810TD00'}))",
          "kotlin": "println(apiClient.bondProfile(isin = \"US912810TD00\", cusip = null, figi = null))",
          "php": "print_r($client->bondProfile(\"US912810TD00\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"isin\":\"US912810TD00\",\n  \"cusip\":\"\",\n  \"figi\":\"BBG0152KFHS6\",\n  \"coupon\":2.25,\n  \"maturityDate\":\"2052-02-15\",\n  \"offeringPrice\":100,\n  \"issueDate\":\"2022-03-15\",\n  \"bondType\":\"US Government\",\n  \"debtType\":\"\",\n  \"industryGroup\":\"Government\",\n  \"industrySubGroup\":\"U.S. Treasuries\",\n  \"asset\":\"\",\n  \"assetType\":\"\",\n  \"datedDate\":\"2022-02-15\",\n  \"firstCouponDate\":\"2022-08-15\",\n  \"originalOffering\":20000000000,\n  \"amountOutstanding\":36914000000,\n  \"paymentFrequency\":\"Semi-Annual\",\n  \"securityLevel\":\"\",\n  \"callable\":null,\n  \"couponType\":\"\",\n  \"dayCount\":\"\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/bond/tick": {
      "get": {
        "summary": "Bond Tick Data",
        "description": "<p>Get trade-level data for bonds. The following datasets are supported:</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Exchange</th>\n      <th>Segment</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>BTDS: US Corporate Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">FINRA Trace</th>\n      <td>144A Bonds</td>\n      <td>Delayed 4h</td>\n    </tr>\n  </tbody>\n</table>",
        "operationId": "bond-tick",
        "navHeader": "Tick/Trade Data",
        "urlId": "bond-tick",
        "title": "Bond Tick data | FINRA TRACE API | Corporate bonds API",
        "examples": [
          {
            "url": "/bond/tick?isin=US693475BF18&date=2022-08-19&limit=50&skip=6&format=json&exchange=trace&token=<token>",
            "text": "/bond/tick?isin=US693475BF18&date=2022-08-19&limit=50&skip=6&format=json&exchange=trace"
          }
        ],
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Bonds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "isin",
            "description": "ISIN.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date: 2020-04-02.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit number of ticks returned. Maximum value: <code>25000</code>",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of ticks to skip. Use this parameter to loop through the entire data.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "exchange",
            "description": "Currently support the following values: <code>trace</code>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/BondTickData"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.bond_tick('US693475BF18', '2022-08-19', 500, 0, 'trace'))",
          "go": "res, _, err := finnhubClient.BondTick(context.Background()).Isin(\"US693475BF18\").Date(\"2022-08-19\").Limit(50).Skip(0).Exchange(\"trace\").Execute()",
          "javascript": "finnhubClient.bondTick(\"US693475BF18\", \"2022-08-19\", 500, 0, 'trace', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.bond_tick('US693475BF18', '2022-08-19', 500, 0, 'trace'))",
          "kotlin": "println(apiClient.bondTick(\"US693475BF18\", \"2022-08-19\", 500, 0, 'trace'))",
          "php": "print_r($client->bondTick(\"US693475BF18\", \"2022-08-19\", 500, 0, \"trace\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"c\":[[],[],[]],\n   \"count\":3,\n   \"cp\":[\n      \"3\",\n      \"1\",\n      \"1\"\n   ],\n   \"p\":[\n      100.592,\n      100.492,\n      100.234\n   ],\n   \"si\":[\n      \"2\",\n      \"2\",\n      \"2\"\n   ],\n   \"skip\":6,\n   \"t\":[\n      1660929161000,\n      1660929161000,\n      1660929778000\n   ],\n   \"total\":211,\n   \"v\":[\n      3000,\n      3000,\n      50000\n   ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/bond/yield-curve": {
      "get": {
        "summary": "Bond Yield Curve",
        "description": "Get yield curve data for Treasury bonds.",
        "operationId": "bond-yield-curve",
        "navHeader": "Yield Curve",
        "urlId": "bond-yield-curve",
        "title": "Treasury Bonds Yield Curve",
        "examples": [
          {
            "url": "/bond/yield-curve?code=10y&token=<token>",
            "text": "/bond/yield-curve?code=10y"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Bonds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "description": "Bond's code. You can find the list of supported code <a href=\"https://docs.google.com/spreadsheets/d/1iA-lM0Kht7lsQZ7Uu_s6r2i1BbQNUNO9eGkO5-zglHg/edit?usp=sharing\" target=\"_blank\" rel=\"noopener\">here</a>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/BondYieldCurve"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.bond_yield_curve('10y'))",
          "go": "res, _, err := finnhubClient.BondYieldCurve(context.Background()).Code(\"10y\").Execute()",
          "javascript": "finnhubClient.bondYieldCurve(\"10y\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.bond_yield_curve('10y'))",
          "kotlin": "println(apiClient.bondYieldCurve(\"10y\"))",
          "php": "print_r($client->bondYieldCurve(\"10y\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"code\": \"10y\",\n  \"data\": [\n    {\n      \"d\": \"2022-10-31\",\n      \"v\": 4.1\n    },\n    {\n      \"d\": \"2022-11-01\",\n      \"v\": 4.07\n    }\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "BondCandles": {
      "type": "object",
      "properties": {
        "c": {
          "type": "array",
          "description": "List of close prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp for returned candles.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "s": {
          "description": "Status of the response. This field can either be ok or no_data.",
          "type": "string"
        }
      }
    },
    "BondProfile": {
      "type": "object",
      "properties": {
        "isin": {
          "description": "ISIN.",
          "type": "string"
        },
        "cusip": {
          "description": "Cusip.",
          "type": "string"
        },
        "figi": {
          "description": "FIGI.",
          "type": "string"
        },
        "coupon": {
          "description": "Coupon.",
          "type": "number",
          "format": "float"
        },
        "maturityDate": {
          "description": "Period.",
          "type": "string"
        },
        "offeringPrice": {
          "description": "Offering price.",
          "type": "number",
          "format": "float"
        },
        "issueDate": {
          "description": "Issue date.",
          "type": "string"
        },
        "bondType": {
          "description": "Bond type.",
          "type": "string"
        },
        "debtType": {
          "description": "Bond type.",
          "type": "string"
        },
        "industryGroup": {
          "description": "Industry.",
          "type": "string"
        },
        "industrySubGroup": {
          "description": "Sub-Industry.",
          "type": "string"
        },
        "asset": {
          "description": "Asset.",
          "type": "string"
        },
        "assetType": {
          "description": "Asset.",
          "type": "string"
        },
        "datedDate": {
          "description": "Dated date.",
          "type": "string"
        },
        "firstCouponDate": {
          "description": "First coupon date.",
          "type": "string"
        },
        "originalOffering": {
          "description": "Offering amount.",
          "type": "number",
          "format": "float"
        },
        "amountOutstanding": {
          "description": "Outstanding amount.",
          "type": "number",
          "format": "float"
        },
        "paymentFrequency": {
          "description": "Payment frequency.",
          "type": "string"
        },
        "securityLevel": {
          "description": "Security level.",
          "type": "string"
        },
        "callable": {
          "description": "Callable.",
          "type": "boolean"
        },
        "couponType": {
          "description": "Coupon type.",
          "type": "string"
        }
      }
    },
    "BondTickData": {
      "type": "object",
      "properties": {
        "skip": {
          "description": "Number of ticks skipped.",
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "description": "Number of ticks returned. If <code>count</code> < <code>limit</code>, all data for that date has been returned.",
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "description": "Total number of ticks for that date.",
          "type": "integer",
          "format": "int64"
        },
        "v": {
          "type": "array",
          "description": "List of volume data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "p": {
          "type": "array",
          "description": "List of price data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "y": {
          "type": "array",
          "description": "List of yield data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp in UNIX ms.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "si": {
          "type": "array",
          "description": "List of values showing the side (Buy/sell) of each trade. List of supported values: <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",>here</a>",
          "items": {
            "type": "string"
          }
        },
        "cp": {
          "type": "array",
          "description": "List of values showing the counterparty of each trade. List of supported values: <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",>here</a>",
          "items": {
            "type": "string"
          }
        },
        "rp": {
          "type": "array",
          "description": "List of values showing the reporting party of each trade. List of supported values: <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",>here</a>",
          "items": {
            "type": "string"
          }
        },
        "ats": {
          "type": "array",
          "description": "ATS flag. Y or empty",
          "items": {
            "type": "string"
          }
        },
        "c": {
          "type": "array",
          "description": "List of trade conditions. A comprehensive list of trade conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\">here</a>",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "BondYieldCurve": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BondYieldCurveInfo"
          },
          "description": "Array of data."
        },
        "code": {
          "description": "Bond's code",
          "type": "string"
        }
      }
    },
    "BondYieldCurveInfo": {
      "type": "object",
      "properties": {
        "d": {
          "description": "Date of the reading",
          "type": "string"
        },
        "v": {
          "description": "Value",
          "type": "number",
          "format": "float"
        }
      }
    }
  }
}