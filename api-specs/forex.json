{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Finnhub API - Forex",
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Finnhub API endpoints for forex"
  },
  "host": "finnhub.io",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "paths": {
    "/forex/candle": {
      "get": {
        "summary": "Forex Candles",
        "description": "Get candlestick data for forex symbols.",
        "operationId": "forex-candles",
        "navHeader": "Candles",
        "urlId": "forex-candles",
        "title": "Forex OHLCV API",
        "examples": [
          {
            "url": "/forex/candle?symbol=OANDA:EUR_USD&resolution=D&from=1572651390&to=1575243390&token=<token>",
            "text": "/forex/candle?symbol=OANDA:EUR_USD&resolution=D&from=1572651390&to=1575243390"
          }
        ],
        "widget": {
          "url": "https://widget.finnhub.io/widgets/stocks/chart?symbol=OANDA:EUR_USD&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white"
        },
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Forex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Use symbol returned in <code>/forex/symbol</code> endpoint for this field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resolution",
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "UNIX timestamp. Interval initial value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "to",
            "description": "UNIX timestamp. Interval end value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/ForexCandles"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.forex_candles('OANDA:EUR_USD', 'D', 1590988249, 1591852249))",
          "go": "res, _, err := finnhubClient.ForexCandles(context.Background()).Symbol(\"OANDA:EUR_USD\").Resolution(\"D\").From(1590988249).To(1591852249).Execute()",
          "javascript": "finnhubClient.forexCandles(\"OANDA:EUR_USD\", \"D\", 1590988249, 1591852249, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.forex_candles('OANDA:EUR_USD', 'D', 1590988249, 1591852249))",
          "kotlin": "println(apiClient.forexCandles(\"OANDA:EUR_USD\", \"D\", 1590988249, 1591852249))",
          "php": "print_r($client->forexCandles(\"OANDA:EUR_USD\", \"D\", 1590988249, 1591852249));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": [\n    1.10713,\n    1.10288,\n    1.10397,\n    1.10182\n  ],\n  \"h\": [\n    1.1074,\n    1.10751,\n    1.10729,\n    1.10595\n  ],\n  \"l\": [\n    1.09897,\n    1.1013,\n    1.10223,\n    1.10101\n  ],\n  \"o\": [\n    1.0996,\n    1.107,\n    1.10269,\n    1.10398\n  ],\n  \"s\": \"ok\",\n  \"t\": [\n    1568667600,\n    1568754000,\n    1568840400,\n    1568926800\n  ],\n  \"v\": [\n    75789,\n    75883,\n    73485,\n    5138\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/forex/exchange": {
      "get": {
        "summary": "Forex Exchanges",
        "description": "List supported forex exchanges",
        "operationId": "forex-exchanges",
        "navHeader": "Exchanges",
        "urlId": "forex-exchanges",
        "title": "List Forex Exchanges",
        "examples": [
          {
            "url": "/forex/exchange?token=<token>",
            "text": "/forex/exchange"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Forex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.forex_exchanges())",
          "go": "res, _, err := finnhubClient.ForexExchanges(context.Background()).Execute()",
          "javascript": "finnhubClient.forexExchanges((error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.forex_exchanges())",
          "kotlin": "println(apiClient.forexExchanges())",
          "php": "print_r($client->forexExchanges());",
          "useTemplate": true
        },
        "sampleResponse": "[\n  \"oanda\",\n  \"fxcm\",\n  \"forex.com\",\n  \"ic markets\",\n  \"fxpro\"\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/forex/rates": {
      "get": {
        "summary": "Forex rates",
        "description": "Get rates for all forex pairs. Ideal for currency conversion",
        "operationId": "forex-rates",
        "navHeader": "All Rates",
        "urlId": "forex-rates",
        "title": "Forex All Rates",
        "examples": [
          {
            "url": "/forex/rates?base=USD&token=<token>",
            "text": "/forex/rates?base=USD"
          },
          {
            "url": "/forex/rates?base=EUR&date=2022-02-10&token=<token>",
            "text": "/forex/rates?base=EUR&date=2022-02-10"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Forex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "base",
            "description": "Base currency. Default to EUR.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date. Leave blank to get the latest data.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Forexrates"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.forex_rates(base='USD'))",
          "go": "res, _, err := finnhubClient.ForexRates(context.Background()).Base(\"USD\").Execute()",
          "javascript": "finnhubClient.forexRates({\"base\": \"USD\"}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.forex_rates({base: 'USD'}))",
          "kotlin": "println(apiClient.forexRates(base = \"USD\"))",
          "php": "print_r($client->forexRates(\"USD\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"base\": \"USD\",\n  \"quote\": {\n    \"AED\": 3.968012,\n    \"AFN\": 82.373308,\n    \"ALL\": 124.235408,\n    \"AMD\": 520.674275,\n    \"CAD\": 1.525368,\n    \"CDF\": 1904.576741,\n    \"CHF\": 1.053259,\n    \"CNY\": 7.675235,\n    \"COP\": 4282.32676,\n    \"CRC\": 614.796995,\n    \"CUC\": 1.080304,\n    \"CUP\": 28.628067,\n    \"CVE\": 110.517004,\n    \"CZK\": 27.096737,\n    \"DJF\": 191.991344,\n    \"DKK\": 7.461229,\n    \"DOP\": 59.195018,\n    \"DZD\": 139.384021,\n    \"EGP\": 17.018597,\n    \"ERN\": 16.204913,\n    \"ETB\": 36.296767,\n    \"EUR\": 0.91,\n    \"GBP\": 0.874841,\n    \"JPY\": 114.583548,\n    \"MDL\": 19.120251,\n    \"MGA\": 4105.156776,\n    \"USD\": 1,\n  }\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/forex/symbol": {
      "get": {
        "summary": "Forex Symbol",
        "description": "List supported forex symbols.",
        "operationId": "forex-symbols",
        "navHeader": "Symbols",
        "urlId": "forex-symbols",
        "title": "Forex Symbols By Exchange",
        "examples": [
          {
            "url": "/forex/symbol?exchange=oanda&token=<token>",
            "text": "/forex/symbol?exchange=oanda"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Forex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Exchange you want to get the list of symbols from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ForexSymbol"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.forex_symbols('OANDA'))",
          "go": "res, _, err := finnhubClient.ForexSymbols(context.Background()).Exchange(\"OANDA\").Execute()",
          "javascript": "finnhubClient.forexSymbols(\"OANDA\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.forex_symbols('OANDA'))",
          "kotlin": "println(apiClient.forexSymbols(\"OANDA\"))",
          "php": "print_r($client->forexSymbols(\"OANDA\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"description\": \"IC MARKETS Euro vs US Dollar EURUSD\",\n    \"displaySymbol\": \"EUR/USD\",\n    \"symbol\": \"IC MARKETS:1\"\n  },\n  {\n    \"description\": \"IC MARKETS Australian vs US Dollar AUDUSD\",\n    \"displaySymbol\": \"AUD/USD\",\n    \"symbol\": \"IC MARKETS:5\"\n  },\n  {\n    \"description\": \"IC MARKETS British Pound vs US Dollar GBPUSD\",\n    \"displaySymbol\": \"GBP/USD\",\n    \"symbol\": \"IC MARKETS:2\"\n  }]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "ForexCandles": {
      "type": "object",
      "properties": {
        "o": {
          "type": "array",
          "description": "List of open prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "h": {
          "type": "array",
          "description": "List of high prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "l": {
          "type": "array",
          "description": "List of low prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "c": {
          "type": "array",
          "description": "List of close prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "v": {
          "type": "array",
          "description": "List of volume data for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "s": {
          "description": "Status of the response. This field can either be ok or no_data.",
          "type": "string"
        }
      }
    },
    "ForexRate": {
      "type": "object"
    },
    "ForexSymbol": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Symbol description",
          "type": "string"
        },
        "displaySymbol": {
          "description": "Display symbol name.",
          "type": "string"
        },
        "symbol": {
          "description": "Unique symbol used to identify this symbol used in <code>/forex/candle</code> endpoint.",
          "type": "string"
        }
      }
    },
    "Forexrates": {
      "type": "object",
      "properties": {
        "base": {
          "description": "Base currency.",
          "type": "string"
        },
        "quote": {
          "type": "object",
          "$ref": "#/definitions/ForexRate",
          "description": "A map of base/quote rates for all currency pair."
        }
      }
    }
  }
}