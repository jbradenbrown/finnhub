{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Finnhub API - Stock",
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Finnhub API endpoints for stock"
  },
  "host": "finnhub.io",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "paths": {
    "/quote": {
      "get": {
        "summary": "Quote",
        "description": "<p>Get real-time quote data for US stocks. Constant polling is not recommended. Use websocket if you need real-time updates.</p><p>Real-time stock prices for international markets are supported for Enterprise clients via our partner's feed. <a href=\"mailto:support@finnhub.io\">Contact Us</a> to learn more.</p>",
        "operationId": "quote",
        "navHeader": "Quote",
        "urlId": "quote",
        "title": "Global Stocks, Forex, Crypto price",
        "examples": [
          {
            "url": "/quote?symbol=AAPL&token=<token>",
            "text": "/quote?symbol=AAPL"
          },
          {
            "url": "/quote?symbol=MSFT&token=<token>",
            "text": "/quote?symbol=MSFT"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": "High Usage",
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Quote"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.quote('AAPL'))",
          "go": "res, _, err := finnhubClient.Quote(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.quote(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.quote('AAPL'))",
          "kotlin": "println(apiClient.quote(\"AAPL\"))",
          "php": "print_r($client->quote(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": 261.74,\n  \"h\": 263.31,\n  \"l\": 260.68,\n  \"o\": 261.07,\n  \"pc\": 259.45,\n  \"t\": 1582641000 \n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/bidask": {
      "get": {
        "summary": "Last Bid-Ask",
        "description": "Get last bid/ask data for US stocks.",
        "operationId": "stock-bidask",
        "navHeader": "Last Bid-Ask",
        "urlId": "stock-bidask",
        "title": "Last Bid & Ask",
        "examples": [
          {
            "url": "/stock/bidask?symbol=AAPL&token=<token>",
            "text": "/stock/bidask?symbol=AAPL"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LastBid-Ask"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.last_bid_ask('AAPL'))",
          "go": "res, _, err := finnhubClient.StockBidask(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.stockBidask(\"AAPL\", (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.stock_bidask('AAPL'))",
          "kotlin": "println(apiClient.stockBidask(\"AAPL\"))",
          "php": "print_r($client->stockBidask(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"a\": 338.65,\n  \"av\": 2,\n  \"b\": 338.61,\n  \"bv\": 2,\n  \"t\": 1591995678874\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/bbo": {
      "get": {
        "summary": "Historical NBBO",
        "description": "<p>Get historical best bid and offer for US stocks, LSE, TSX, Euronext and Deutsche Borse.</p><p>For US market, this endpoint only serves historical NBBO from the beginning of 2020. To download more historical data, please visit our bulk download page in the Dashboard <a target=\"_blank\" href=\"/dashboard/download\",>here</a>.</p>",
        "operationId": "stock-nbbo",
        "navHeader": "Historical NBBO",
        "urlId": "stock-nbbo",
        "title": "Historical NBBO - Best bid/offer",
        "examples": [
          {
            "url": "/stock/bbo?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json&token=<token>",
            "text": "/stock/bbo?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json"
          },
          {
            "url": "/stock/bbo?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json&token=<token>",
            "text": "/stock/bbo?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json"
          },
          {
            "url": "/stock/bbo?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json&token=<token>",
            "text": "/stock/bbo?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date: 2020-04-02.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit number of ticks returned. Maximum value: <code>25000</code>",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of ticks to skip. Use this parameter to loop through the entire data.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/HistoricalNBBO"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_nbbo('AAPL', '2020-03-25', 500, 0))",
          "go": "res, _, err := finnhubClient.StockNbbo(context.Background()).Symbol(\"AAPL\").Date(\"2021-07-23\").Limit(50).Skip(0).Execute()",
          "javascript": "finnhubClient.stockNbbo(\"AAPL\", \"2020-03-25\", 500, 0, (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.stock_nbbo('NFLX', '2020-03-25', 50, 0))",
          "kotlin": "println(apiClient.stockNbbo(\"AAPL\", \"2020-03-25\", 500, 0))",
          "php": "print_r($client->stockNbbo(\"AAPL\", \"2020-03-25\", 500, 0));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"a\": [\n    137,\n    133.2,\n    126.08\n  ],\n  \"av\": [\n    1,\n    2,\n    1\n  ],\n  \"ax\": [\n    \"P\",\n    \"P\",\n    \"P\"\n  ],\n  \"b\": [\n    116.5,\n    116.5,\n    116.5\n  ],\n  \"bv\": [\n    1,\n    1,\n    1\n  ],\n  \"bx\": [\n    \"P\",\n    \"P\",\n    \"P\"\n  ],\n  \"c\": [\n    [\n      \"1\"\n    ],\n    [\n      \"1\"\n    ],\n    [\n      \"1\"\n    ]\n  ],\n  \"count\": 3,\n  \"s\": \"AAPL\",\n  \"skip\": 5,\n  \"t\": [\n    1615280400047,\n    1615280400047,\n    1615280400047\n  ],\n  \"total\": 2739880\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/candle": {
      "get": {
        "summary": "Stock Candles",
        "description": "<p>Get candlestick data (OHLCV) for stocks.</p><p>Daily data will be adjusted for Splits. Intraday data will remain unadjusted. Only 1 month of intraday will be returned at a time. If you need more historical intraday data, please use the from and to params iteratively to request more data.</p>",
        "operationId": "stock-candles",
        "navHeader": "Candles (OHLCV)",
        "urlId": "stock-candles",
        "title": "Global Stocks OHLCV data | Real-time , Delayed, End-of-day",
        "examples": [
          {
            "url": "/stock/candle?symbol=AAPL&resolution=1&from=1738655051&to=1738741451&token=<token>",
            "text": "/stock/candle?symbol=AAPL&resolution=1&from=1738655051&to=1738741451"
          },
          {
            "url": "/stock/candle?symbol=IBM&resolution=D&from=1735976651&to=1738741451&token=<token>",
            "text": "/stock/candle?symbol=IBM&resolution=D&from=1735976651&to=1738741451"
          }
        ],
        "widget": {
          "url": "https://widget.finnhub.io/widgets/stocks/chart?symbol=AAPL&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white"
        },
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resolution",
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "UNIX timestamp. Interval initial value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "to",
            "description": "UNIX timestamp. Interval end value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/StockCandles"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_candles('AAPL', 'D', 1590988249, 1591852249))",
          "go": "res, _, err := finnhubClient.StockCandles(context.Background()).Symbol(\"AAPL\").Resolution(\"D\").From(1590988249).To(1591852249).Execute()",
          "javascript": "finnhubClient.stockCandles(\"AAPL\", \"D\", 1590988249, 1591852249, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_candles('AAPL', 'D', 1590988249, 1591852249))",
          "kotlin": "println(apiClient.stockCandles(\"AAPL\", \"D\", 1590988249, 1591852249))",
          "php": "print_r($client->stockCandles(\"AAPL\", \"D\", 1590988249, 1591852249));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": [\n    217.68,\n    221.03,\n    219.89\n  ],\n  \"h\": [\n    222.49,\n    221.5,\n    220.94\n  ],\n  \"l\": [\n    217.19,\n    217.1402,\n    218.83\n  ],\n  \"o\": [\n    221.03,\n    218.55,\n    220\n  ],\n  \"s\": \"ok\",\n  \"t\": [\n    1569297600,\n    1569384000,\n    1569470400\n  ],\n  \"v\": [\n    33463820,\n    24018876,\n    20730608\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/congressional-trading": {
      "get": {
        "summary": "Congressional Trading",
        "description": "Get stock trades data disclosed by members of congress.",
        "operationId": "congressional-trading",
        "navHeader": "Congressional Trading",
        "urlId": "congressional-trading",
        "title": "Congressional Stock Trades API.",
        "examples": [
          {
            "url": "/stock/congressional-trading?symbol=AAPL&token=<token>",
            "text": "/stock/congressional-trading?symbol=AAPL"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CongressionalTrading"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.congressional_trading('AAPL', '2020-01-01', '2023-03-31'))",
          "go": "res, _, err := finnhubClient.CongressionalTrading(context.Background()).Symbol(\"MSFT\").From(\"2020-01-01\").To(\"2023-01-02\").Execute()",
          "javascript": "finnhubClient.congressionalTrading(\"AAPL\", '2020-01-01', '2023-03-31', (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.congressional_trading('AAPL', '2020-01-01', '2023-03-31'))",
          "kotlin": "println(apiClient.congressionalTrading(\"AAPL\", \"2020-01-01\", \"2023-03-31\"))",
          "php": "print_r($client->congressionalTrading(\"AAPL\", \"2020-01-01\", \"2023-03-31\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"amountFrom\": 100001,\n      \"amountTo\": 250000,\n      \"assetName\": \"Oppenheimer SteelPath MLP Select 40 Y (NASDAQ)\",\n      \"filingDate\": \"2015-05-14\",\n      \"name\": \"Lamar Alexander\",\n      \"ownerType\": \"Spouse\",\n      \"position\": \"senator\",\n      \"symbol\": \"MLPTX\",\n      \"transactionDate\": \"2014-04-04\",\n      \"transactionType\": \"Purchase\"\n    },\n    {\n      \"amountFrom\": 1001,\n      \"amountTo\": 15000,\n      \"assetName\": \"Oppenheimer SteelPath MLP Select 40 Y (NASDAQ)\",\n      \"filingDate\": \"2015-05-14\",\n      \"name\": \"Lamar Alexander\",\n      \"ownerType\": \"Spouse\",\n      \"position\": \"senator\",\n      \"symbol\": \"MLPTX\",\n      \"transactionDate\": \"2014-02-07\",\n      \"transactionType\": \"Purchase\"\n    }\n  ],\n  \"symbol\": \"MLPTX\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/dividend": {
      "get": {
        "summary": "Dividends",
        "description": "Get dividends data for common stocks going back 30 years.",
        "operationId": "stock-dividends",
        "navHeader": "Dividends",
        "urlId": "stock-dividends",
        "title": "Global Stocks Dividends API",
        "examples": [
          {
            "url": "/stock/dividend?symbol=AAPL&from=2022-02-01&to=2023-02-01&token=<token>",
            "text": "/stock/dividend?symbol=AAPL&from=2022-02-01&to=2023-02-01"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "YYYY-MM-DD.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "YYYY-MM-DD.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dividends"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_dividends('KO', _from='2019-01-01', to='2020-01-01'))",
          "go": "res, _, err := finnhubClient.StockDividends(context.Background()).Symbol(\"KO\").From(\"2019-01-01\").To(\"2021-01-01\").Execute()",
          "javascript": "finnhubClient.stockDividends(\"KO\", \"2019-01-01\", \"2020-06-30\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_dividends('KO', '2019-01-01', '2020-01-01'))",
          "kotlin": "println(apiClient.stockDividends(\"KO\", from = \"2019-01-01\", to = \"2020-01-01\"))",
          "php": "print_r($client->stockDividends(\"KO\", \"2019-01-01\", \"2020-01-01\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-11-07\",\n    \"amount\": 0.77,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-11-14\",\n    \"recordDate\": \"2019-11-11\",\n    \"declarationDate\": \"2019-10-30\",\n    \"currency\": \"USD\"\n  },\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-08-09\",\n    \"amount\": 0.77,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-08-15\",\n    \"recordDate\": \"2019-08-12\",\n    \"declarationDate\": \"2019-07-30\",\n    \"currency\": \"USD\"\n  },\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-05-10\",\n    \"amount\": 0.77,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-05-16\",\n    \"recordDate\": \"2019-05-13\",\n    \"declarationDate\": \"2019-05-01\",\n    \"currency\": \"USD\"\n  },\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2019-02-08\",\n    \"amount\": 0.73,\n    \"adjustedAmount\": 0.77,\n    \"payDate\": \"2019-02-14\",\n    \"recordDate\": \"2019-02-11\",\n    \"declarationDate\": \"2019-01-29\",\n    \"currency\": \"USD\"\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/dividend2": {
      "get": {
        "summary": "Dividends 2 (Basic)",
        "description": "Get global dividends data.",
        "operationId": "stock-basic-dividends",
        "navHeader": "Dividends 2",
        "urlId": "stock-basic-dividends",
        "title": "Basic Dividends",
        "examples": [
          {
            "url": "/stock/dividend2?symbol=AAPL&token=<token>",
            "text": "/stock/dividend2?symbol=AAPL"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Dividends2"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_basic_dividends('AAPL'))",
          "go": "res, _, err := finnhubClient.StockBasicDividends(context.Background()).Symbol(\"KO\").Execute()",
          "javascript": "finnhubClient.stockBasicDividends(\"KO\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_basic_dividends('KO'))",
          "kotlin": "println(apiClient.stockBasicDividends(\"KO\"))",
          "php": "print_r($client->stockBasicDividends(\"KO\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n  {\n    \"exDate\": \"2019-11-07\",\n    \"amount\": 0.77,\n    \n  },\n  {\n    \"exDate\": \"2019-08-09\",\n    \"amount\": 0.77,\n  },\n  {\n    \"exDate\": \"2019-05-10\",\n    \"amount\": 0.77,\n  }\n],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/earnings": {
      "get": {
        "summary": "Earnings Surprises",
        "description": "Get company historical quarterly earnings surprise going back to 2000.",
        "operationId": "company-earnings",
        "navHeader": "EPS Surprises",
        "urlId": "company-earnings",
        "title": "Global Company EPS Surprises",
        "examples": [
          {
            "url": "/stock/earnings?symbol=AAPL&token=<token>",
            "text": "/stock/earnings?symbol=AAPL"
          },
          {
            "url": "/stock/earnings?symbol=TSLA&token=<token>",
            "text": "/stock/earnings?symbol=TSLA"
          }
        ],
        "widget": {
          "url": "https://widget.finnhub.io/widgets/historical-eps?symbol=AAPL"
        },
        "freeTier": "Last 4 quarters",
        "premium": null,
        "newEndpoint": null,
        "highUsage": "High Usage",
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit number of period returned. Leave blank to get the full history.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EarningResult"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_earnings('TSLA', limit=5))",
          "go": "res, _, err := finnhubClient.CompanyEarnings(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEarnings(\"AAPL\", {'limit': 10}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_earnings('TSLA', {limit: 5}))",
          "kotlin": "println(apiClient.companyEarnings(\"TSLA\", limit = 5))",
          "php": "print_r($client->companyEarnings(\"TSLA\", 5));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"actual\": 1.88,\n    \"estimate\": 1.9744,\n    \"period\": \"2023-03-31\",\n    \"quarter\": 1,\n    \"surprise\": -0.0944,\n    \"surprisePercent\": -4.7812,\n    \"symbol\": \"AAPL\",\n    \"year\": 2023\n  },\n  {\n    \"actual\": 1.29,\n    \"estimate\": 1.2957,\n    \"period\": \"2022-12-31\",\n    \"quarter\": 4,\n    \"surprise\": -0.0057,\n    \"surprisePercent\": -0.4399,\n    \"symbol\": \"AAPL\",\n    \"year\": 2022\n  },\n  {\n    \"actual\": 1.2,\n    \"estimate\": 1.1855,\n    \"period\": \"2022-09-30\",\n    \"quarter\": 3,\n    \"surprise\": 0.0145,\n    \"surprisePercent\": 1.2231,\n    \"symbol\": \"AAPL\",\n    \"year\": 2022\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/earnings-call-live": {
      "get": {
        "summary": "Earnings Call Audio Live",
        "description": "<p>Stream live earnings calls with data provided in the calendar. The data will be available in m3u8 format. mp3 files will be available once the calls finish in the <code>recording</code> field.</p>",
        "operationId": "earnings-call-live",
        "navHeader": "Earnings Call Live",
        "urlId": "earnings-call-live-api",
        "title": "Earnings Call Live API | Stream Live Earnings Calls API",
        "examples": [
          {
            "url": "/stock/earnings-call-live?from=2024-11-01&to=2024-11-07&token=<token>",
            "text": "/stock/earnings-call-live?from=2024-11-01&to=2024-11-07"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "symbol",
            "description": "Filter by symbol: AAPL.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EarningsCallLive"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.earnings_call_live(\"2024-11-01\", \"2024-11-30\"))",
          "go": "res, _, err := finnhubClient.EarningsCallLive(context.Background()).From(\"2024-11-01\").To(\"2024-11-30\").Execute()",
          "javascript": "finnhubClient.earningsCallLive(\"NVDA\", \"2024-11-01\", \"2024-11-30\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.earnings_call_live('NVDA', \"2024-11-01\", \"2024-11-30\"))",
          "kotlin": "println(apiClient.earningsCallLive(\"NVDA\", from = \"2024-11-01\", to = \"2024-11-30\"))",
          "php": "print_r($client->earningsCallLive(\"NVDA\", \"2024-11-01\", \"2024-11-30\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"event\": [\n    {\n      \"symbol\": \"NVDA\",\n      \"year\": 2025,\n      \"quarter\": 3,\n      \"event\": \"NVDA - Earnings call Q3 year\",\n      \"time\": \"2024-11-20 22:00:00\",\n      \"liveAudio\": \"https://live.finnhub.io/hls/2063191eb8563e1645fe3bde2b057511dce4f8a0fb39a2fb9/audio.m3u8\",\n      \"recording\": \"\"\n    },\n    {\n      \"symbol\": \"SNOW\",\n      \"year\": 2025,\n      \"quarter\": 3,\n      \"event\": \"SNOW - Earnings call Q3 year\",\n      \"time\": \"2024-11-20 22:00:00\",\n      \"liveAudio\": \"https://live.finnhub.io/hls/869c16f0fe27d972d49b511f18eea69499c6f0c460a28/audio.m3u8\",\n      \"recording\": \"\"\n    }\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/earnings-quality-score": {
      "get": {
        "summary": "Company Earnings Quality Score",
        "description": "<p>This endpoint provides Earnings Quality Score for global companies.</p><p> Earnings quality refers to the extent to which current earnings predict future earnings. \"High-quality\" earnings are expected to persist, while \"low-quality\" earnings do not. A higher score means a higher earnings quality</p><p>Finnhub uses a proprietary model which takes into consideration 4 criteria:</p> <ul style=\"list-style-type: unset; margin-left: 30px;\"><li>Profitability</li><li>Growth</li><li>Cash Generation & Capital Allocation</li><li>Leverage</li></ul><br/><p>We then compare the metrics of each company in each category against its peers in the same industry to gauge how quality its earnings is.</p>",
        "operationId": "company-earnings-quality-score",
        "navHeader": "Earnings Quality Score",
        "urlId": "company-earnings-quality-score-api",
        "title": "Company Earnings Quality Score API",
        "examples": [
          {
            "url": "/stock/earnings-quality-score?symbol=AAPL&freq=quarterly&token=<token>",
            "text": "/stock/earnings-quality-score?symbol=AAPL&freq=quarterly"
          },
          {
            "url": "/stock/earnings-quality-score?symbol=WMT&freq=quarterly&token=<token>",
            "text": "/stock/earnings-quality-score?symbol=WMT&freq=quarterly"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Frequency. Currently support <code>annual</code> and <code>quarterly</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CompanyEarningsQualityScore"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_earnings_quality_score('AAPL', 'quarterly'))",
          "go": "res, _, err := finnhubClient.CompanyEarningsQualityScore(context.Background()).Symbol(\"AAPL\").Freq(\"quarterly\").Execute()",
          "javascript": "finnhubClient.companyEarningsQualityScore('AAPL', 'quarterly', (error, data, response) => {\n    console.log(data);\n});",
          "ruby": "puts(finnhub_client.company_earnings_quality_score('AAPL', 'quarterly'))",
          "kotlin": "println(apiClient.companyEarningsQualityScore(\"AAPL\", \"quarterly\"))",
          "php": "print_r($client->companyEarningsQualityScore(\"AAPL\", \"quarterly\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"capitalAllocation\": 67.6878,\n      \"growth\": 55.8022,\n      \"letterScore\": \"B+\",\n      \"leverage\": 24.5122,\n      \"period\": \"2021-06-01\",\n      \"profitability\": 82.3843,\n      \"score\": 57.5966\n    },\n    {\n      \"capitalAllocation\": 75.1464,\n      \"growth\": 70.2461,\n      \"letterScore\": \"A-\",\n      \"leverage\": 39.5682,\n      \"period\": \"2021-03-01\",\n      \"profitability\": 88.4613,\n      \"score\": 68.3555\n    },\n    {\n      \"capitalAllocation\": 43.8708,\n      \"growth\": 68.1803,\n      \"letterScore\": \"A-\",\n      \"leverage\": 56.1926,\n      \"period\": \"2020-12-01\",\n      \"profitability\": 92.6311,\n      \"score\": 65.2187\n    },\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/ebit-estimate": {
      "get": {
        "summary": "EBIT Estimates",
        "description": "Get company's ebit estimates.",
        "operationId": "company-ebit-estimates",
        "navHeader": "EBIT Estimates",
        "urlId": "company-ebit-estimates",
        "title": "Global Company Ebit Estimates",
        "examples": [
          {
            "url": "/stock/ebit-estimate?symbol=AAPL&token=<token>",
            "text": "/stock/ebit-estimate?symbol=AAPL"
          },
          {
            "url": "/stock/ebit-estimate?symbol=TSLA&freq=annual&token=<token>",
            "text": "/stock/ebit-estimate?symbol=TSLA&freq=annual"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EbitEstimates"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_ebit_estimates('TSLA', freq='quarterly'))",
          "go": "res, _, err := finnhubClient.CompanyEbitEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEbitEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_ebit_estimates('TSLA', {freq: 'quarterly'}))",
          "kotlin": "println(apiClient.companyEbitEstimates(\"TSLA\", freq = \"quarterly\"))",
          "php": "print_r($client->companyEbitEstimates(\"TSLA\", \"quarterly\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-06-30\",\n      \"ebitAvg\": 58800500000,\n      \"ebitHigh\": 64060000000,\n      \"ebitLow\": 54072000000\n      \"quarter\": 3,\n      \"year\": 2020,\n    },\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-03-31\",\n      \"ebitAvg\": 61287300000,\n      \"ebitHigh\": 66557000000,\n      \"ebitLow\": 54871000000,\n      \"quarter\": 2,\n      \"year\": 2020,\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/ebitda-estimate": {
      "get": {
        "summary": "EBITDA Estimates",
        "description": "Get company's ebitda estimates.",
        "operationId": "company-ebitda-estimates",
        "navHeader": "EBITDA Estimates",
        "urlId": "company-ebitda-estimates",
        "title": "Global Company Ebitda Estimates",
        "examples": [
          {
            "url": "/stock/ebitda-estimate?symbol=AAPL&token=<token>",
            "text": "/stock/ebitda-estimate?symbol=AAPL"
          },
          {
            "url": "/stock/ebitda-estimate?symbol=TSLA&freq=annual&token=<token>",
            "text": "/stock/ebitda-estimate?symbol=TSLA&freq=annual"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EbitdaEstimates"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_ebitda_estimates('TSLA', freq='quarterly'))",
          "go": "res, _, err := finnhubClient.CompanyEbitdaEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEbitdaEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_ebitda_estimates('TSLA', {freq: 'quarterly'}))",
          "kotlin": "println(apiClient.companyEbitdaEstimates(\"TSLA\", freq = \"quarterly\"))",
          "php": "print_r($client->companyEbitdaEstimates(\"TSLA\", \"quarterly\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-06-30\",\n      \"ebitdaAvg\": 58800500000,\n      \"ebitdaHigh\": 64060000000,\n      \"ebitdaLow\": 54072000000,\n      \"quarter\": 3,\n      \"year\": 2020\n    },\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-03-31\",\n      \"ebitdaAvg\": 61287300000,\n      \"ebitdaHigh\": 66557000000,\n      \"ebitdaLow\": 54871000000,\n      \"quarter\": 2,\n      \"year\": 2020\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/eps-estimate": {
      "get": {
        "summary": "Earnings Estimates",
        "description": "Get company's EPS estimates.",
        "operationId": "company-eps-estimates",
        "navHeader": "EPS Estimates",
        "urlId": "company-eps-estimates",
        "title": "Global Company EPS Estimates",
        "examples": [
          {
            "url": "/stock/eps-estimate?symbol=AAPL&token=<token>",
            "text": "/stock/eps-estimate?symbol=AAPL"
          },
          {
            "url": "/stock/eps-estimate?symbol=AMZN&freq=annual&token=<token>",
            "text": "/stock/eps-estimate?symbol=AMZN&freq=annual"
          }
        ],
        "widget": {
          "url": "https://widget.finnhub.io/widgets/eps-estimate?symbol=AAPL"
        },
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EarningsEstimates"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_eps_estimates('AAPL', freq='quarterly'))",
          "go": "res, _, err := finnhubClient.CompanyEpsEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEpsEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_eps_estimates('AAPL', {freq: 'quarterly'}))",
          "kotlin": "println(apiClient.companyEpsEstimates(\"AAPL\", freq = \"quarterly\"))",
          "php": "print_r($client->companyEpsEstimates(\"AAPL\", \"quarterly\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"epsAvg\": 2.65,\n      \"epsHigh\": 2.98,\n      \"epsLow\": 2.05,\n      \"numberAnalysts\": 35,\n      \"period\": \"2020-06-30\",\n      \"quarter\": 3,\n      \"year\": 2020\n    },\n    {\n      \"epsAvg\": 2.52,\n      \"epsHigh\": 3.02,\n      \"epsLow\": 2.21,\n      \"numberAnalysts\": 34,\n      \"period\": \"2020-03-31\",\n      \"quarter\": 2,\n      \"year\": 2020\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/esg": {
      "get": {
        "summary": "Company ESG Scores",
        "description": "<p>This endpoint provides the latest ESG scores and important indicators for 7000+ global companies. The data is collected through company's public ESG disclosure and public sources.</p><p>Our ESG scoring models takes into account more than 150 different inputs to calculate the level of ESG risks and how well a company is managing them. A higher score means lower ESG risk or better ESG management. ESG scores are in the the range of 0-100. Some key indicators might contain letter-grade score from C- to A+ with C- is the lowest score and A+ is the highest score.</p>",
        "operationId": "company-esg-score",
        "navHeader": "Company ESG",
        "urlId": "company-esg-score-api",
        "title": "Company ESG Scores API",
        "examples": [
          {
            "url": "/stock/esg?symbol=AAPL&token=<token>",
            "text": "/stock/esg?symbol=AAPL"
          },
          {
            "url": "/stock/esg?symbol=WMT&token=<token>",
            "text": "/stock/esg?symbol=WMT"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CompanyESG"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_esg_score(\"AAPL\"))",
          "go": "res, _, err := finnhubClient.CompanyEsgScore(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyEsgScore('AAPL', (error, data, response) => {\n    console.log(data);\n});",
          "ruby": "puts(finnhub_client.company_esg_score('AAPL'))",
          "kotlin": "println(apiClient.companyEsgScore(\"AAPL\"))",
          "php": "print_r($client->companyEsgScore(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": {\n    \"womenManagementPercentage\": 17.02,\n    \"adultContent\": false,\n    \"alcoholic\": false,\n    \"animalTesting\": false,\n    \"antitrust\": \"C+\",\n    \"asianEmployeePercentage\": 27,\n    \"asianManagementPercentage\": 27,\n    \"blackEmployeePercentage\": 9,\n    \"blackManagementPercentage\": 4,\n    \"carbonReductionPolicy\": null,\n    \"catholic\": false,\n    \"climateStrategy\": \"A+\",\n    \"co2EmissionScope1\": 47430,\n    \"co2EmissionScope2\": 890189,\n    \"co2EmissionScope3\": 22648000,\n    \"co2EmissionTotal\": 937619,\n    \"coalEnergy\": false,\n    \"ecofriendlyPackaging\": null,\n    \"environmentalReporting\": true,\n    \"firearms\": false,\n    \"fuelEfficiencyConsumption\": null,\n    \"furLeather\": false,\n    \"gambling\": false,\n    \"gmo\": false,\n    \"hazardousSubstances\": null,\n    \"hispanicLatinoEmployeePercentage\": 14,\n    \"hispanicLatinoManagementPercentage\": 8,\n    \"humanRightsPolicy\": \"C-\",\n    \"militaryContract\": false,\n    \"nuclear\": false,\n    \"palmOil\": false,\n    \"pesticides\": false,\n    \"privacyPolicy\": \"B-\",\n    \"recallPolicySafety\": null,\n    \"recyclingPolicy\": null,\n    \"stakeholderEngagement\": null,\n    \"sustainableForestryPolicy\": null,\n    \"tobacco\": false,\n    \"totalWomenPercentage\": 34,\n    \"waterEfficiencyConsumption\": null,\n    \"weapons\": false,\n    \"whiteEmployeePercentage\": 47,\n    \"whiteManagementPercentage\": 59,\n    \"workplaceHealthSafety\": null\n  },\n  \"environmentScore\": 73.21,\n  \"governanceScore\": 56.06,\n  \"socialScore\": 45.81,\n  \"symbol\": \"AAPL\",\n  \"totalESGScore\": 56.04\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/executive": {
      "get": {
        "summary": "Company Executive",
        "description": "Get a list of company's executives and members of the Board.",
        "operationId": "company-executive",
        "navHeader": "Company Executive",
        "urlId": "company-executive",
        "title": "Global Company Executives & Compensation",
        "examples": [
          {
            "url": "/stock/executive?symbol=AAPL&token=<token>",
            "text": "/stock/executive?symbol=AAPL"
          },
          {
            "url": "/stock/executive?symbol=AMZN&token=<token>",
            "text": "/stock/executive?symbol=AMZN"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CompanyExecutive"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_executive('AAPL'))",
          "go": "res, _, err := finnhubClient.CompanyExecutive(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyExecutive('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_executive('AAPL'))",
          "kotlin": "println(apiClient.companyExecutive(\"AAPL\"))",
          "php": "print_r($client->companyExecutive(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"executive\": [\n    {\n      \"age\": 56,\n      \"compensation\": 25209637,\n      \"currency\": \"USD\",\n      \"name\": \"Luca Maestri\",\n      \"position\": \"Senior Vice President and Chief Financial Officer\",\n      \"sex\": \"male\",\n      \"since\": \"2014\"\n    },\n    {\n      \"age\": 59,\n      \"compensation\": 11555466,\n      \"currency\": \"USD\",\n      \"name\": \"Mr. Timothy Cook\",\n      \"position\": \"Director and Chief Executive Officer\",\n      \"sex\": \"male\",\n      \"since\": \"2011\"\n    }\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/filings": {
      "get": {
        "summary": "SEC Filings",
        "description": "List company's filing. Limit to 250 documents at a time. This data is available for bulk download on <a href=\"https://www.kaggle.com/finnhub/sec-filings\" target=\"_blank\">Kaggle SEC Filings database</a>.",
        "operationId": "filings",
        "navHeader": "SEC Filings",
        "urlId": "filings",
        "title": "Real-time SEC Filings API",
        "examples": [
          {
            "url": "/stock/filings?symbol=AAPL&token=<token>",
            "text": "/stock/filings?symbol=AAPL"
          },
          {
            "url": "/stock/filings?cik=320193&token=<token>",
            "text": "/stock/filings?cik=320193"
          },
          {
            "url": "/stock/filings?accessNumber=0000320193-20-000052&token=<token>",
            "text": "/stock/filings?accessNumber=0000320193-20-000052"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol. Leave <code>symbol</code>,<code>cik</code> and <code>accessNumber</code> empty to list latest filings.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cik",
            "description": "CIK.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "accessNumber",
            "description": "Access number of a specific report you want to retrieve data from.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "form",
            "description": "Filter by form. You can use this value <code>NT 10-K</code> to find non-timely filings for a company.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date: 2023-03-15.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date: 2023-03-16.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Filing"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.filings(symbol='AAPL', _from=\"2020-01-01\", to=\"2020-06-11\"))",
          "go": "res, _, err := finnhubClient.Filings(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.filings({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.filings({symbol: 'AAPL', from: \"2020-01-01\", to: \"2020-06-11\"}))\n",
          "kotlin": "println(\n            apiClient.filings(\n                symbol = \"AAPL\",\n                from = \"2020-01-01\",\n                to = \"2020-06-11\",\n                accessNumber = null,\n                cik = null,\n                form = null\n            )\n        )",
          "php": "print_r($client->filings(\"AAPL\", \"2020-01-01\", \"2020-06-11\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"accessNumber\": \"0001193125-20-050884\",\n    \"symbol\": \"AAPL\",\n    \"cik\": \"320193\",\n    \"form\": \"8-K\",\n    \"filedDate\": \"2020-02-27 00:00:00\",\n    \"acceptedDate\": \"2020-02-27 06:14:21\",\n    \"reportUrl\": \"https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000119312520050884/d865740d8k.htm\",\n    \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000119312520050884/0001193125-20-050884-index.html\"\n  },\n  {\n    \"accessNumber\": \"0001193125-20-039203\",\n    \"symbol\": \"AAPL\",\n    \"cik\": \"320193\",\n    \"form\": \"8-K\",\n    \"filedDate\": \"2020-02-18 00:00:00\",\n    \"acceptedDate\": \"2020-02-18 06:24:57\",\n    \"reportUrl\": \"https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000119312520039203/d845033d8k.htm\",\n    \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000119312520039203/0001193125-20-039203-index.html\"\n  },\n  ...\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/filings-sentiment": {
      "get": {
        "summary": "SEC Sentiment Analysis",
        "description": "Get sentiment analysis of 10-K and 10-Q filings from SEC. An abnormal increase in the number of positive/negative words in filings can signal a significant change in the company's stock price in the upcoming 4 quarters. We make use of <a href= \"https://sraf.nd.edu/textual-analysis/resources/\" target=\"_blank\">Loughran and McDonald Sentiment Word Lists</a> to calculate the sentiment for each filing.",
        "operationId": "filings-sentiment",
        "navHeader": "SEC Sentiment Analysis",
        "urlId": "filings-sentiment",
        "title": "Sec Filings Sentiment Analysis",
        "examples": [
          {
            "url": "/stock/filings-sentiment?accessNumber=0000320193-20-000052&token=<token>",
            "text": "/stock/filings-sentiment?accessNumber=0000320193-20-000052"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accessNumber",
            "description": "Access number of a specific report you want to retrieve data from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/SECSentimentAnalysis"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.sec_sentiment_analysis('0000320193-20-000052'))",
          "go": "res, _, err := finnhubClient.FilingsSentiment(context.Background()).AccessNumber(\"0000320193-20-000052\").Execute()",
          "javascript": "finnhubClient.filingsSentiment('0000320193-20-000052', (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.filings_sentiment('0000320193-20-000052', {}))",
          "kotlin": "println(apiClient.filingsSentiment(\"0000320193-20-000052\"))",
          "php": "print_r($client->filingsSentiment(\"0000320193-20-000052\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"symbol\": \"AAPL\",\n  \"accessNumber\": \"0000320193-20-000052\",\n  \"sentiment\": {\n    \"negative\": 1.2698412698412698,\n    \"polarity\": -0.1147540479911535,\n    \"positive\": 0.5042016806722689,\n    \"litigious\": 0.2427637721755369,\n    \"modal-weak\": 0.392156862745098,\n    \"uncertainty\": 1.1391223155929038,\n    \"constraining\": 0.5975723622782446,\n    \"modal-strong\": 0.14939309056956115,\n    \"modal-moderate\": 0.11204481792717086\n  }\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/financials": {
      "get": {
        "summary": "Financial Statements",
        "description": "<p>Get standardized balance sheet, income statement and cash flow for global companies going back 30+ years. Data is sourced from original filings most of which made available through <a href=\"#filings\">SEC Filings</a> and <a href=\"#international-filings\">International Filings</a> endpoints.</p><p><i>Wondering why our standardized data is different from Bloomberg, Reuters, Factset, S&P or Yahoo Finance ? Check out our <a href=\"/faq\">FAQ page</a> to learn more</i></p>",
        "operationId": "financials",
        "navHeader": "Financials",
        "urlId": "financials",
        "title": "Global Company Financial Statements",
        "examples": [
          {
            "url": "/stock/financials?symbol=AAPL&statement=bs&freq=annual&token=<token>",
            "text": "/stock/financials?symbol=AAPL&statement=bs&freq=annual"
          },
          {
            "url": "/stock/financials?symbol=AC.TO&statement=ic&freq=quarterly&token=<token>",
            "text": "/stock/financials?symbol=AC.TO&statement=ic&freq=quarterly"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "statement",
            "description": "Statement can take 1 of these values <code>bs, ic, cf</code> for Balance Sheet, Income Statement, Cash Flow respectively.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Frequency can take 1 of these values <code>annual, quarterly, ttm, ytd</code>.  TTM (Trailing Twelve Months) option is available for Income Statement and Cash Flow. YTD (Year To Date) option is only available for Cash Flow.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/FinancialStatements"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.financials('AAPL', 'bs', 'annual'))",
          "go": "res, _, err := finnhubClient.Financials(context.Background()).Symbol(\"AAPL\").Statement(\"bs\").Freq(\"annual\").Execute()",
          "javascript": "finnhubClient.financials(\"AAPL\", \"ic\", \"annual\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.financials('AAPL', 'bs', 'annual'))",
          "kotlin": "println(apiClient.financials(\"AAPL\", \"bs\", \"annual\"))",
          "php": "print_r($client->financials(\"AAPL\", \"bs\", \"annual\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"financials\": [\n    {\n      \"costOfGoodsSold\": 161782,\n      \"ebit\": 63930,\n      \"grossIncome\": 98392,\n      \"interestExpense\": 3576,\n      \"netIncome\": 55256,\n      \"netIncomeAfterTaxes\": 55256,\n      \"period\": \"2019-09-28\",\n      \"pretaxIncome\": 65737,\n      \"provisionforIncomeTaxes\": 10481,\n      \"researchDevelopment\": 16217,\n      \"revenue\": 260174,\n      \"sgaExpense\": 18245,\n      \"totalOperatingExpense\": 34462,\n      \"year\": 2019\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}    ",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/financials-reported": {
      "get": {
        "summary": "Financials As Reported",
        "description": "Get financials as reported. This data is available for bulk download on <a href=\"https://www.kaggle.com/finnhub/reported-financials\" target=\"_blank\">Kaggle SEC Financials database</a>.",
        "operationId": "financials-reported",
        "navHeader": "Financials As Reported",
        "urlId": "financials-reported",
        "title": "Financials As Reported | Stock API",
        "examples": [
          {
            "url": "/stock/financials-reported?symbol=AAPL&token=<token>",
            "text": "/stock/financials-reported?symbol=AAPL"
          },
          {
            "url": "/stock/financials-reported?cik=320193&freq=quarterly&token=<token>",
            "text": "/stock/financials-reported?cik=320193&freq=quarterly"
          },
          {
            "url": "/stock/financials-reported?accessNumber=0000320193-20-000052&token=<token>",
            "text": "/stock/financials-reported?accessNumber=0000320193-20-000052"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cik",
            "description": "CIK.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "accessNumber",
            "description": "Access number of a specific report you want to retrieve financials from.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Frequency. Can be either <code>annual</code> or <code>quarterly</code>. Default to <code>annual</code>.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>. Filter for endDate.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>. Filter for endDate.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/FinancialsAsReported"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.financials_reported(symbol='AAPL', freq='annual'))",
          "go": "res, _, err := finnhubClient.FinancialsReported(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.financialsReported({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.financials_reported({symbol: 'AAPL', freq: 'annual'}))",
          "kotlin": "println(apiClient.financialsReported(symbol = \"AAPL\", freq = \"annual\", accessNumber = null, cik = null))",
          "php": "print_r($client->financialsReported($symbol = \"AAPL\", $freq = \"annual\"));\n",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"data\": [\n    {\n      \"accessNumber\": \"0000320193-19-000119\",\n      \"symbol\": \"AAPL\",\n      \"cik\": \"320193\",\n      \"year\": 2019,\n      \"quarter\": 0,\n      \"form\": \"10-K\",\n      \"startDate\": \"2018-09-30 00:00:00\",\n      \"endDate\": \"2019-09-28 00:00:00\",\n      \"filedDate\": \"2019-10-31 00:00:00\",\n      \"acceptedDate\": \"2019-10-30 18:12:36\",\n      \"report\": {\n        \"bs\": {\n          \"Assets\": 338516000000,\n          \"Liabilities\": 248028000000,\n          \"InventoryNet\": 4106000000,\n          ...\n        },\n        \"cf\": {\n          \"NetIncomeLoss\": 55256000000,\n          \"InterestPaidNet\": 3423000000,\n          ...\n        },\n        \"ic\": {\n          \"GrossProfit\": 98392000000,\n          \"NetIncomeLoss\": 55256000000,\n          \"OperatingExpenses\": 34462000000,\n           ...\n        }\n      }\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/fund-ownership": {
      "get": {
        "summary": "Fund Ownership",
        "description": "Get a full list fund and institutional investors of a company in descending order of the number of shares held. Data is sourced from <code>13F form</code>, <code>Schedule 13D</code> and <code>13G</code> for US market, <code>UK Share Register</code> for UK market, <code>SEDI</code> for Canadian market and equivalent filings for other international markets.",
        "operationId": "fund-ownership",
        "navHeader": "Fund Ownership",
        "urlId": "fund-ownership",
        "title": "Fund Ownership",
        "examples": [
          {
            "url": "/stock/fund-ownership?symbol=TSLA&limit=20&token=<token>",
            "text": "/stock/fund-ownership?symbol=TSLA&limit=20"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit number of results. Leave empty to get the full list.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/FundOwnership"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.fund_ownership('AAPL', limit=5))",
          "go": "res, _, err := finnhubClient.FundOwnership(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "let optsLimit = {'limit': 10};\nfinnhubClient.fundOwnership(\"AAPL\", optsLimit, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.fund_ownership('AAPL', {limit: 5}))",
          "kotlin": "println(apiClient.fundOwnership(\"AAPL\", limit = 5))",
          "php": "print_r($client->fundOwnership(\"AMZN\", 5));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"ownership\": [\n    {\n      \"name\": \"AGTHX | American Funds Growth Fund of America\",\n      \"share\": 5145353,\n      \"change\": 57427,\n      \"filingDate\": \"2020-03-31\",\n      \"portfolioPercent\": 1.88\n    },\n    {\n      \"name\": \"Vanguard Total Stock Market Index Fund\",\n      \"share\": 4227464,\n      \"change\": 73406,\n      \"filingDate\": \"2020-03-31\",\n      \"portfolioPercent\": 0.45\n    },\n    {\n      \"name\": \"ANWPX | American Funds New Perspective\",\n      \"share\": 3377612,\n      \"change\": 0,\n      \"filingDate\": \"2020-03-31\",\n      \"portfolioPercent\": 2.64\n    }\n  ],\n  \"symbol\": \"TSLA\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/historical-employee-count": {
      "get": {
        "summary": "Historical Employee Count",
        "description": "Get historical employee count for global companies.",
        "operationId": "historical-employee-count",
        "navHeader": "Historical Employee",
        "urlId": "historical-employee-count",
        "title": "Global Historical Employee Count API",
        "examples": [
          {
            "url": "/stock/historical-employee-count?symbol=AAPL&from=2022-01-01&to=2024-05-06&token=<token>",
            "text": "/stock/historical-employee-count?symbol=AAPL&from=2022-01-01&to=2024-05-06"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Accessible with Fundamental 2 or All in One subscription.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Company symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/HistoricalEmployeeCount"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.historical_employee_count('AAPL', _from=\"2020-06-01\", to=\"2020-06-10\"))",
          "go": "res, _, err := finnhubClient.HistoricalEmployeeCount(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2020-05-01\").Execute()",
          "javascript": "finnhubClient.historicalEmployeeCount(\"AAPL\", \"2020-01-01\", \"2020-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.historical_employee_count('AAPL', \"2020-06-01\", \"2020-06-10\"))",
          "kotlin": "println(apiClient.historicalEmployeeCount(\"AAPL\", from = \"2020-06-01\", to = \"2020-06-10\"))",
          "php": "print_r($client->historicalEmployeeCount(\"AAPL\", \"2020-06-01\", \"2020-06-10\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"atDate\": \"2023-09-30\",\n      \"employee\": 161000\n    },\n    {\n      \"atDate\": \"2022-09-24\",\n      \"employee\": 164000\n    },\n    {\n      \"atDate\": \"2021-09-25\",\n      \"employee\": 154000\n    },\n    {\n      \"atDate\": \"2020-09-26\",\n      \"employee\": 147000\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/historical-esg": {
      "get": {
        "summary": "Historical ESG Scores",
        "description": "<p>This endpoint provides historical ESG scores and important indicators for 7000+ global companies. The data is collected through company's public ESG disclosure and public sources.</p><p>Our ESG scoring models takes into account more than 150 different inputs to calculate the level of ESG risks and how well a company is managing them. A higher score means lower ESG risk or better ESG management. ESG scores are in the the range of 0-100. Some key indicators might contain letter-grade score from C- to A+ with C- is the lowest score and A+ is the highest score.</p>",
        "operationId": "company-historical-esg-score",
        "navHeader": "Historical ESG",
        "urlId": "company-historical-esg-score-api",
        "title": "Company Historical ESG Scores API",
        "examples": [
          {
            "url": "/stock/historical-esg?symbol=AAPL&token=<token>",
            "text": "/stock/historical-esg?symbol=AAPL"
          },
          {
            "url": "/stock/historical-esg?symbol=WMT&token=<token>",
            "text": "/stock/historical-esg?symbol=WMT"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/HistoricalCompanyESG"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_historical_esg_score(\"AAPL\"))",
          "go": "res, _, err := finnhubClient.CompanyHistoricalEsgScore(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyHistoricalEsgScore('AAPL', (error, data, response) => {\n    console.log(data);\n});",
          "ruby": "puts(finnhub_client.company_historical_esg_score('AAPL'))",
          "kotlin": "println(apiClient.companyHistoricalEsgScore(\"AAPL\"))",
          "php": "print_r($client->companyHistoricalEsgScore(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"data\": {\n        \"adultContent\": false,\n        \"alcoholic\": false,\n        \"animalTesting\": false,\n        \"antitrust\": \"62.0\",\n        \"asianEmployeePercentage\": 27.9,\n        \"asianManagementPercentage\": 29.2,\n        \"blackEmployeePercentage\": 9.4,\n        \"blackManagementPercentage\": 4,\n        \"carbonReductionPolicy\": \"True\",\n        \"catholic\": true,\n        \"co2EmissionScope1\": 55202,\n        \"co2EmissionScope2\": 1003246,\n        \"co2EmissionScope3\": 23128420,\n        \"co2EmissionTotal\": 1058448,\n        \"coalEnergy\": false\n      },\n      \"environmentScore\": 61.74593,\n      \"governanceScore\": 92.81813,\n      \"period\": \"2021-09-25\",\n      \"socialScore\": 76.52558,\n      \"totalESGScore\": 77.02988\n    },\n    {\n      \"data\": {\n        \"adultContent\": false,\n        \"alcoholic\": false,\n        \"animalTesting\": false,\n        \"antitrust\": \"28.0\",\n        \"asianEmployeePercentage\": 27,\n        \"asianManagementPercentage\": 27,\n        \"blackEmployeePercentage\": 9,\n        \"blackManagementPercentage\": 4,\n        \"carbonReductionPolicy\": \"True\",\n        \"catholic\": true,\n        \"co2EmissionScope1\": 47430,\n        \"co2EmissionScope2\": 890189,\n        \"co2EmissionScope3\": 22547000,\n        \"co2EmissionTotal\": 937619\n      },\n      \"environmentScore\": 59.460255,\n      \"governanceScore\": 85.85033,\n      \"period\": \"2020-09-26\",\n      \"socialScore\": 74.40586,\n      \"totalESGScore\": 73.238815\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/historical-market-cap": {
      "get": {
        "summary": "Historical Market Cap",
        "description": "Get historical market cap data for global companies.",
        "operationId": "historical-market-cap",
        "navHeader": "Historical Market Cap",
        "urlId": "historical-market-cap",
        "title": "Global Historical Market Cap API",
        "examples": [
          {
            "url": "/stock/historical-market-cap?symbol=AAPL&from=2022-01-01&to=2024-05-06&token=<token>",
            "text": "/stock/historical-market-cap?symbol=AAPL&from=2022-01-01&to=2024-05-06"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Accessible with Fundamental 2 or All in One subscription.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Company symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/HistoricalMarketCapData"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.historical_market_cap('AAPL', _from=\"2020-06-01\", to=\"2020-06-10\"))",
          "go": "res, _, err := finnhubClient.HistoricalMarketCap(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2020-05-01\").Execute()",
          "javascript": "finnhubClient.historicalMarketCap(\"AAPL\", \"2020-01-01\", \"2020-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.historical_market_cap('AAPL', \"2020-06-01\", \"2020-06-10\"))",
          "kotlin": "println(apiClient.historicalMarketCap(\"AAPL\", from = \"2020-06-01\", to = \"2020-06-10\"))",
          "php": "print_r($client->historicalMarketCap(\"AAPL\", \"2020-06-01\", \"2020-06-10\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"currency\": \"USD\",\n  \"data\": [\n    {\n      \"atDate\": \"2024-06-10\",\n      \"marketCapitalization\": 3759.182\n    },\n    {\n      \"atDate\": \"2024-06-09\",\n      \"marketCapitalization\": 21508.447\n    }\n  ],\n  \"symbol\": \"SYM\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/insider-sentiment": {
      "get": {
        "summary": "Insider Sentiment",
        "description": "Get insider sentiment data for US companies calculated using method discussed <a href=\"https://medium.com/@stock-api/finnhub-insiders-sentiment-analysis-cc43f9f64b3a\" target=\"_blank\">here</a>. The MSPR ranges from -100 for the most negative to 100 for the most positive which can signal price changes in the coming 30-90 days.",
        "operationId": "insider-sentiment",
        "navHeader": "Insider Sentiment",
        "urlId": "insider-sentiment",
        "title": "Insider Sentiment API",
        "examples": [
          {
            "url": "/stock/insider-sentiment?symbol=TSLA&from=2015-01-01&to=2022-03-01&token=<token>",
            "text": "/stock/insider-sentiment?symbol=TSLA&from=2015-01-01&to=2022-03-01"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date: 2020-03-15.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date: 2020-03-16.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/InsiderSentiments"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_insider_sentiment('AAPL', '2021-01-01', '2022-03-01'))",
          "go": "res, _, err := finnhubClient.InsiderSentiment(context.Background()).Symbol(\"AAPL\").From(\"2021-01-01\").To(\"2022-07-30\").Execute()",
          "javascript": "finnhubClient.insiderSentiment('AAPL', '2015-01-01', '2022-03-01', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.insider_sentiment('AAPL', '2015-01-01', '2022-03-01'))",
          "kotlin": "println(apiClient.insiderSentiment(\"AAPL\", \"2021-01-01\", \"2022-07-07\"))",
          "php": "print_r($client->insiderSentiment(\"AAPL\", \"2021-01-01\", \"2022-03-01\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\":[\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2021,\n      \"month\":3,\n      \"change\":5540,\n      \"mspr\":12.209097\n    },\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2022,\n      \"month\":1,\n      \"change\":-1250,\n      \"mspr\":-5.6179776\n    },\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2022,\n      \"month\":2,\n      \"change\":-1250,\n      \"mspr\":-2.1459227\n    },\n    {\n      \"symbol\":\"TSLA\",\n      \"year\":2022,\n      \"month\":3,\n      \"change\":5870,\n      \"mspr\":8.960191\n    }\n  ],\n  \"symbol\":\"TSLA\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/insider-transactions": {
      "get": {
        "summary": "Insider Transactions",
        "description": "Company insider transactions data sourced from <code>Form 3,4,5</code>, SEDI and relevant companies' filings. This endpoint covers US, UK, Canada, Australia, India, and all major EU markets. Limit to 100 transactions per API call.",
        "operationId": "insider-transactions",
        "navHeader": "Insider Transactions",
        "urlId": "insider-transactions",
        "title": "Insider Transactions",
        "examples": [
          {
            "url": "/stock/insider-transactions?symbol=TSLA&token=<token>",
            "text": "/stock/insider-transactions?symbol=TSLA&limit=20"
          },
          {
            "url": "/stock/insider-transactions?symbol=AC.TO&token=<token>",
            "text": "/stock/insider-transactions?symbol=AC.TO"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL. Leave this param blank to get the latest transactions.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date: 2020-03-15.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date: 2020-03-16.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/InsiderTransactions"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_insider_transactions('AAPL', '2021-01-01', '2021-03-01'))",
          "go": "res, _, err := finnhubClient.InsiderTransactions(context.Background()).Symbol(\"AAPL\").From(\"2021-01-01\").To(\"2021-07-30\").Execute()",
          "javascript": "finnhubClient.insiderTransactions('AAPL', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.insider_transactions('AAPL'))",
          "kotlin": "println(apiClient.insiderTransactions(\"AAPL\", \"2021-01-01\", \"2021-07-07\"))",
          "php": "print_r($client->insiderTransactions(\"AAPL\", \"2021-01-01\", \"2021-03-01\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"name\": \"Kirkhorn Zachary\",\n      \"share\": 57234,\n      \"change\": -1250,\n      \"filingDate\": \"2021-03-19\",\n      \"transactionDate\": \"2021-03-17\",\n      \"transactionCode\": \"S\",\n      \"transactionPrice\": 655.81\n    },\n    {\n      \"name\": \"Baglino Andrew D\",\n      \"share\": 20614,\n      \"change\": 1000,\n      \"filingDate\": \"2021-03-31\",\n      \"transactionDate\": \"2021-03-29\",\n      \"transactionCode\": \"M\",\n      \"transactionPrice\": 41.57\n    },\n    {\n      \"name\": \"Baglino Andrew D\",\n      \"share\": 19114,\n      \"change\": -1500,\n      \"filingDate\": \"2021-03-31\",\n      \"transactionDate\": \"2021-03-29\",\n      \"transactionCode\": \"S\",\n      \"transactionPrice\": 615.75\n    }\n  ],\n  \"symbol\": \"TSLA\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/international-filings": {
      "get": {
        "summary": "International Filings",
        "description": "List filings for international companies. Limit to 500 documents at a time. These are the documents we use to source our fundamental data. Enterprise clients who need access to the full filings for global markets should contact us for the access.",
        "operationId": "international-filings",
        "navHeader": "International Filings",
        "urlId": "international-filings",
        "title": "Global Company Filings",
        "examples": [
          {
            "url": "/stock/international-filings?symbol=RY.TO&token=<token>",
            "text": "/stock/international-filings?symbol=RY.TO"
          },
          {
            "url": "/stock/international-filings?country=CA&token=<token>",
            "text": "/stock/international-filings?country=CA"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Access approved on a case by case basis",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Global Filings Search",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol. Leave empty to list latest filings.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "country",
            "description": "Filter by country using country's 2-letter code.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date: 2023-01-15.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date: 2023-12-16.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InternationalFiling"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.international_filings('AC.TO'))",
          "go": "res, _, err := finnhubClient.InternationalFilings(context.Background()).Symbol(\"AC.TO\").Execute()",
          "javascript": "finnhubClient.internationalFilings({\"symbol\": \"AC.TO\"}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.international_filings({symbol: 'AC.TO'}))",
          "kotlin": "println(apiClient.internationalFilings(\"AC.TO\", \"\"))",
          "php": "print_r($client->internationalFilings(\"AC.TO\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"MINDTREE.NS\",\n    \"companyName\": \"MindTree Limited\",\n    \"filedDate\": \"2015-03-31 20:27:00\",\n    \"category\": \"Resignation of Director\",\n    \"title\": \"MindTree Limited has informed the Exchange that Mr. David B Yoffie has resigned as Independent Director of the company. The Board of Directors have accepted his resignation effective March 30, 2015.\",\n    \"description\": \"\",\n    \"url\": \"https://finnhub.io/international-filings?id=523566\",\n    \"language\": \"en\",\n    \"country\": \"IN\"\n  },\n  {\n    \"symbol\": \"INOXLEISUR.NS\",\n    \"companyName\": \"INOX Leisure Limited\",\n    \"filedDate\": \"2015-03-31 20:24:00\",\n    \"category\": \"Updates\",\n    \"title\": \"INOX Leisure Limited has informed the Exchange regarding Commencement of Commercial Operations of Multiplex Cinema Theatre situated at E-wing, Osia Commercial Arcade, SGPDA Market Complex, Margao, Goa 403601.\",\n    \"description\": \"\",\n    \"url\": \"https://finnhub.io/international-filings?id=52152\",\n    \"language\": \"en\",\n    \"country\": \"IN\"\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/investment-theme": {
      "get": {
        "summary": "Investment Themes (Thematic Investing)",
        "description": "<p>Thematic investing involves creating a portfolio (or portion of a portfolio) by gathering together a collection of companies involved in certain areas that you predict will generate above-market returns over the long term. Themes can be based on a concept such as ageing populations or a sub-sector such as robotics, and drones. Thematic investing focuses on predicted long-term trends rather than specific companies or sectors, enabling investors to access structural, one-off shifts that can change an entire industry.</p><p>This endpoint will help you get portfolios of different investment themes that are changing our life and are the way of the future.</p><p>A full list of themes supported can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\">here</a>. The theme coverage and portfolios are updated bi-weekly by our analysts. Our approach excludes penny, super-small cap and illiquid stocks.</p>",
        "operationId": "investment-themes",
        "navHeader": "Investment Themes",
        "urlId": "investment-themes-thematic-investing",
        "title": "Investment Themes (Thematic Investing)",
        "examples": [
          {
            "url": "/stock/investment-theme?theme=financialExchangesData&token=<token>",
            "text": "/stock/investment-theme?theme=financialExchangesData"
          },
          {
            "url": "/stock/investment-theme?theme=futureFood&token=<token>",
            "text": "/stock/investment-theme?theme=futureFood"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "theme",
            "description": "Investment theme. A full list of themes supported can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\">here</a>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/InvestmentThemes"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_investment_theme('financialExchangesData'))",
          "go": "res, _, err := finnhubClient.InvestmentThemes(context.Background()).Theme(\"financialExchangesData\").Execute()",
          "javascript": "finnhubClient.investmentThemes('financialExchangesData', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.investment_themes('financialExchangesData'))",
          "kotlin": "println(apiClient.investmentThemes(\"financialExchangesData\"))",
          "php": "print_r($client->investmentThemes(\"financialExchangesData\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"symbol\": \"ICE\"\n    },\n    {\n      \"symbol\": \"NDAQ\"\n    },\n    {\n      \"symbol\": \"CBOE\"\n    },\n    {\n      \"symbol\": \"FDS\"\n    },\n    {\n      \"symbol\": \"SPGI\"\n    },\n    {\n      \"symbol\": \"TW\"\n    }\n  ],\n  \"theme\": \"financialExchangesData\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/lobbying": {
      "get": {
        "summary": "Senate Lobbying",
        "description": "Get a list of reported lobbying activities in the Senate and the House.",
        "operationId": "stock-lobbying",
        "navHeader": "Senate Lobbying",
        "urlId": "stock-lobbying",
        "title": "Senate and House lobbying data from public companies",
        "examples": [
          {
            "url": "/stock/lobbying?symbol=AAPL&from=2021-01-01&to=2022-12-31&token=<token>",
            "text": "/stock/lobbying?symbol=AAPL&from=2021-01-01&to=2022-12-31"
          }
        ],
        "widget": null,
        "premium": null,
        "newEndpoint": "New",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LobbyingResult"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_lobbying(\"AAPL\", \"2021-01-01\", \"2022-06-15\"))",
          "go": "res, _, err := finnhubClient.StockLobbying(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2022-05-01\").Execute()",
          "javascript": "finnhubClient.stockLobbying(\"AAPL\", \"2020-01-01\", \"2022-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_lobbying('AAPL', \"2020-06-01\", \"2022-06-10\"))",
          "kotlin": "println(apiClient.stockLobbying(\"AAPL\", from = \"2020-06-01\", to = \"2022-06-10\"))",
          "php": "print_r($client->stockLobbying(\"AAPL\", \"2020-06-01\", \"2022-06-10\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\":[\n    {\n      \"symbol\":\"AAPL\",\n      \"name\":\"APPLE, INC.\",\n      \"description\":\"Hardware and software maunfacturer\",\n      \"country\":\"US\",\n      \"uuid\":\"db75bb6f-162a-433a-a997-a679eb4c6af6\",\n      \"year\":2020,\n      \"period\":\"fourth_quarter\",\n      \"type\":\"Q4\",\n      \"documentUrl\":\"https://lda.senate.gov/filings/public/filing/db75bb6f-162a-433a-a997-a679eb4c6af6/print/\",\n      \"income\":40000,\n      \"expenses\":null,\n      \"postedName\":\"\",\n      \"dtPosted\":\"\",\n      \"clientId\":\"173094\",\n      \"registrantId\":\"86196\",\n      \"senateId\":\"86196-173094\",\n      \"houseRegistrantId\":\"36548\"\n    },\n    {\n      \"symbol\":\"AAPL\",\n      \"name\":\"APPLE INC\",\n      \"description\":\"\",\n      \"country\":\"US\",\n      \"uuid\":\"cad6db2f-c3ca-4b9d-bc24-4c56fc7eaadb\",\n      \"year\":2020,\n      \"period\":\"fourth_quarter\",\n      \"type\":\"Q4\",\n      \"documentUrl\":\"https://lda.senate.gov/filings/public/filing/cad6db2f-c3ca-4b9d-bc24-4c56fc7eaadb/print/\",\n      \"income\":null,\n      \"expenses\":1450000,\n      \"postedName\":\"\",\n      \"dtPosted\":\"\",\n      \"clientId\":\"103979\",\n      \"registrantId\":\"4152\",\n      \"senateId\":\"4152-103979\",\n      \"houseRegistrantId\":\"31450\"\n    }\n  ],\n  \"symbol\":\"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/market-holiday": {
      "get": {
        "summary": "Market Holiday",
        "description": "Get a list of holidays for global exchanges.",
        "operationId": "market-holiday",
        "navHeader": "Market Holiday",
        "urlId": "market-holiday",
        "title": "Global Stock Market Holiday API",
        "examples": [
          {
            "url": "/stock/market-holiday?exchange=US&token=<token>",
            "text": "/stock/market-holiday?exchange=US"
          },
          {
            "url": "/stock/market-holiday?exchange=L&token=<token>",
            "text": "/stock/market-holiday?exchange=L"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Exchange code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/MarketHoliday"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.market_holiday(exchange='US'))",
          "go": "res, _, err := finnhubClient.MarketHoliday(context.Background()).Exchange(\"US\").Execute()",
          "javascript": "finnhubClient.marketHoliday({'exchange': 'US'}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.market_holiday({exchange: 'US'}))",
          "kotlin": "println(apiClient.marketHoliday(exchange = \"US\"))",
          "php": "print_r($client->marketHoliday(\"US\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"eventName\": \"Christmas\",\n      \"atDate\": \"2023-12-25\",\n      \"tradingHour\": \"\"\n    },\n    {\n      \"eventName\": \"Independence Day\",\n      \"atDate\": \"2023-07-03\",\n      \"tradingHour\": \"09:30-13:00\"\n    }\n  ],\n  \"exchange\": \"US\",\n  \"timezone\": \"America/New_York\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/market-status": {
      "get": {
        "summary": "Market Status",
        "description": "Get current market status for global exchanges (whether exchanges are open or close).",
        "operationId": "market-status",
        "navHeader": "Market Status",
        "urlId": "market-status",
        "title": "Global Market Status API",
        "examples": [
          {
            "url": "/stock/market-status?exchange=US&token=<token>",
            "text": "/stock/market-status?exchange=US"
          },
          {
            "url": "/stock/market-status?exchange=L&token=<token>",
            "text": "/stock/market-status?exchange=L"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Exchange code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/MarketStatus"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.market_status(exchange='US'))",
          "go": "res, _, err := finnhubClient.MarketStatus(context.Background()).Exchange(\"US\").Execute()",
          "javascript": "finnhubClient.marketStatus({'exchange': 'US'}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.market_status({exchange: 'US'}))",
          "kotlin": "println(apiClient.marketStatus(exchange = \"US\"))",
          "php": "print_r($client->marketStatus(\"US\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"exchange\": \"US\",\n  \"holiday\": null,\n  \"isOpen\": false,\n  \"session\": \"pre-market\",\n  \"timezone\": \"America/New_York\",\n  \"t\": 1697018041\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/metric": {
      "get": {
        "summary": "Basic Financials",
        "description": "Get company basic financials such as margin, P/E ratio, 52-week high/low etc.",
        "operationId": "company-basic-financials",
        "navHeader": "Basic Financials",
        "urlId": "company-basic-financials",
        "title": "Global Company Basic Financials | P/E, EPS, Market cap, Shares Outstanding",
        "examples": [
          {
            "url": "/stock/metric?symbol=AAPL&metric=all&token=<token>",
            "text": "/stock/metric?symbol=AAPL&metric=all"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": "High Usage",
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metric",
            "description": "Metric type. Can be 1 of the following values <code>all</code>",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/BasicFinancials"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_basic_financials('AAPL', 'all'))",
          "go": "res, _, err := finnhubClient.CompanyBasicFinancials(context.Background()).Symbol(\"MSFT\").Metric(\"all\").Execute()",
          "javascript": "finnhubClient.companyBasicFinancials(\"AAPL\", \"all\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_basic_financials('AAPL', 'all'))",
          "kotlin": "println(apiClient.companyBasicFinancials(\"AAPL\", \"all\"))",
          "php": "print_r($client->companyBasicFinancials(\"AAPL\", \"all\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"series\": {\n    \"annual\": {\n      \"currentRatio\": [\n        {\n          \"period\": \"2019-09-28\",\n          \"v\": 1.5401\n        },\n        {\n          \"period\": \"2018-09-29\",\n          \"v\": 1.1329\n        }\n      ],\n      \"salesPerShare\": [\n        {\n          \"period\": \"2019-09-28\",\n          \"v\": 55.9645\n        },\n        {\n          \"period\": \"2018-09-29\",\n          \"v\": 53.1178\n        }\n      ],\n      \"netMargin\": [\n        {\n          \"period\": \"2019-09-28\",\n          \"v\": 0.2124\n        },\n        {\n          \"period\": \"2018-09-29\",\n          \"v\": 0.2241\n        }\n      ]\n    }\n  },\n  \"metric\": {\n    \"10DayAverageTradingVolume\": 32.50147,\n    \"52WeekHigh\": 310.43,\n    \"52WeekLow\": 149.22,\n    \"52WeekLowDate\": \"2019-01-14\",\n    \"52WeekPriceReturnDaily\": 101.96334,\n    \"beta\": 1.2989,\n  },\n  \"metricType\": \"all\",\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/ownership": {
      "get": {
        "summary": "Ownership",
        "description": "Get a full list of shareholders of a company in descending order of the number of shares held. Data is sourced from <code>13F form</code>, <code>Schedule 13D</code> and <code>13G</code> for US market, <code>UK Share Register</code> for UK market, <code>SEDI</code> for Canadian market and equivalent filings for other international markets.",
        "operationId": "ownership",
        "navHeader": "Ownership",
        "urlId": "ownership",
        "title": "Company Ownership",
        "examples": [
          {
            "url": "/stock/ownership?symbol=AAPL&limit=20&token=<token>",
            "text": "/stock/ownership?symbol=AAPL&limit=20"
          },
          {
            "url": "/stock/ownership?symbol=IBM&token=<token>",
            "text": "/stock/ownership?symbol=IBM"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit number of results. Leave empty to get the full list.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Ownership"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.ownership('AAPL', limit=5))",
          "go": "res, _, err := finnhubClient.Ownership(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "let optsLimit = {'limit': 10};\nfinnhubClient.ownership(\"AAPL\", optsLimit, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.ownership('AAPL', {limit: 5}))",
          "kotlin": "println(apiClient.ownership(\"AAPL\", limit = 5))",
          "php": "print_r($client->ownership(\"AAPL\", 5));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"ownership\": [\n    {\n      \"name\": \"The Vanguard Group, Inc.\",\n      \"share\": 329323420,\n      \"change\": -1809077,\n      \"filingDate\": \"2019-12-31\"\n    },\n    {\n      \"name\": \"BRK.A | Berkshire Hathaway Inc.\",\n      \"share\": 245155570,\n      \"change\": -3683113,\n      \"filingDate\": \"2019-12-31\"\n    },\n    {\n      \"name\": \"BlackRock Institutional Trust Co NA\",\n      \"share\": 187354850,\n      \"change\": -2500563,\n      \"filingDate\": \"2020-03-31\"\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/peers": {
      "get": {
        "summary": "Peers",
        "description": "Get company peers. Return a list of peers operating in the same country and sector/industry.",
        "operationId": "company-peers",
        "navHeader": "Peers",
        "urlId": "company-peers",
        "title": "Company Peers",
        "examples": [
          {
            "url": "/stock/peers?symbol=AAPL&token=<token>",
            "text": "/stock/peers?symbol=AAPL"
          },
          {
            "url": "/stock/peers?symbol=F&grouping=industry&token=<token>",
            "text": "/stock/peers?symbol=F&grouping=industry"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "grouping",
            "description": "Specify the grouping criteria for choosing peers.Supporter values: <code>sector</code>, <code>industry</code>, <code>subIndustry</code>. Default to <code>subIndustry</code>.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_peers('AAPL'))",
          "go": "res, _, err := finnhubClient.CompanyPeers(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyPeers('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.companyPeers('AAPL'))",
          "kotlin": "println(apiClient.companyPeers(\"AAPL\"))",
          "php": "print_r($client->companyPeers(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  \"AAPL\",\n  \"EMC\",\n  \"HPQ\",\n  \"DELL\",\n  \"WDC\",\n  \"HPE\",\n  \"NTAP\",\n  \"CPQ\",\n  \"SNDK\",\n  \"SEG\"\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/presentation": {
      "get": {
        "summary": "Company Presentation",
        "description": "<p>Get presentations/slides data in PDF format that are usually used during earnings calls.</p>",
        "operationId": "stock-presentation",
        "navHeader": "Company Presentation",
        "urlId": "stock-presentation-slide-api",
        "title": "Company Presentation",
        "examples": [
          {
            "url": "/stock/presentation?symbol=IBM&token=<token>",
            "text": "/stock/presentation?symbol=IBM"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Company symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/StockPresentation"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_presentation('IBM'))",
          "go": "res, _, err := finnhubClient.StockPresentation(context.Background()).Symbol(\"IBM\").Execute()",
          "javascript": "finnhubClient.stockPresentation('IBM', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.stock_presentation('IBM'))",
          "kotlin": "println(apiClient.stockPresentation(\"IBM\", \"\", \"\"))",
          "php": "print_r($client->stockPresentation(\"IBM\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"res\": [\n    {\n      \"atTime\": \"2025-01-29 22:00:00\",\n      \"quarter\": 4,\n      \"title\": \"IBM Q4 2024\",\n      \"url\": \"https://finnhub.io/api/redirect?urlType=transcripts-slides2&id=d244c28ec5ee4767b2\",\n      \"year\": 2024\n    },\n    {\n      \"atTime\": \"2024-10-23 21:00:00\",\n      \"quarter\": 3,\n      \"title\": \"IBM Q3 2024\",\n      \"url\": \"https://finnhub.io/api/redirect?urlType=transcripts-slides2&id=491dc513be934082f1\",\n      \"year\": 2024\n    }\n  ],\n  \"symbol\": \"IBM\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/price-metric": {
      "get": {
        "summary": "Price Metrics",
        "description": "Get company price performance statistics such as 52-week high/low, YTD return and much more.",
        "operationId": "price-metrics",
        "navHeader": "Price Metrics",
        "urlId": "price-metrics",
        "title": "Price statistics API | 52-week high/low , YTD return, average volume.",
        "examples": [
          {
            "url": "/stock/price-metric?symbol=AAPL&token=<token>",
            "text": "/stock/price-metric?symbol=AAPL"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "description": "Get data on a specific date in the past. The data is available weekly so your date will be automatically adjusted to the last day of that week.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/PriceMetrics"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.price_metrics('AAPL'))",
          "go": "res, _, err := finnhubClient.PriceMetrics(context.Background()).Symbol(\"MSFT\").Execute()",
          "javascript": "finnhubClient.priceMetrics(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.price_metrics('AAPL'))",
          "kotlin": "println(apiClient.priceMetrics(\"AAPL\"))",
          "php": "print_r($client->priceMetrics(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": {\n    \"100DayEMA\": 295.7694,\n    \"100DaySMA\": 319.2297,\n    \"10DayAverageTradingVolume\": 53717320,\n    \"10DayEMA\": 247.4641,\n    \"10DaySMA\": 247.372,\n    \"14DayRSI\": 34.0517,\n    \"1MonthHigh\": 314.67,\n    \"1MonthHighDate\": \"2022-08-16\",\n    \"50DayEMA\": 277.482,\n    \"50DaySMA\": 288.313,\n    \"52WeekHigh\": 414.5,\n    \"52WeekHighDate\": \"2021-11-04\",\n    \"52WeekLow\": 206.86,\n    \"52WeekLowDate\": \"2022-05-24\",\n    \"5DayEMA\": 245.8814,\n    \"ytdPriceReturn\": 10.1819\n  },\n  \"symbol\": \"TSLA\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/price-target": {
      "get": {
        "summary": "Price Target",
        "description": "Get latest price target consensus.",
        "operationId": "price-target",
        "navHeader": "Price Target",
        "urlId": "price-target",
        "title": "Stocks Price Target",
        "examples": [
          {
            "url": "/stock/price-target?symbol=NFLX&token=<token>",
            "text": "/stock/price-target?symbol=NFLX"
          },
          {
            "url": "/stock/price-target?symbol=DIS&token=<token>",
            "text": "/stock/price-target?symbol=DIS"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/PriceTarget"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.price_target('AAPL'))",
          "go": "res, _, err := finnhubClient.PriceTarget(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.priceTarget('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.price_target('AAPL'))",
          "kotlin": "println(apiClient.priceTarget(\"AAPL\"))",
          "php": "print_r($client->priceTarget(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"lastUpdated\": \"2023-04-06 00:00:00\",\n  \"numberAnalysts\": 39,\n  \"symbol\": \"NFLX\",\n  \"targetHigh\": 462,\n  \"targetLow\": 217.15,\n  \"targetMean\": 364.37,\n  \"targetMedian\": 359.04\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/profile": {
      "get": {
        "summary": "Company Profile",
        "description": "Get general information of a company. You can query by symbol, ISIN or CUSIP",
        "operationId": "company-profile",
        "navHeader": "Company Profile",
        "urlId": "company-profile",
        "title": "Global Company Profile",
        "examples": [
          {
            "url": "/stock/profile?symbol=AAPL&token=<token>",
            "text": "/stock/profile?symbol=AAPL"
          },
          {
            "url": "/stock/profile?symbol=IBM&token=<token>",
            "text": "/stock/profile?symbol=IBM"
          },
          {
            "url": "/stock/profile?isin=US5949181045&token=<token>",
            "text": "/stock/profile?isin=US5949181045"
          },
          {
            "url": "/stock/profile?cusip=023135106&token=<token>",
            "text": "/stock/profile?cusip=023135106"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL e.g.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isin",
            "description": "ISIN",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cusip",
            "description": "CUSIP",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CompanyProfile"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_profile(symbol='AAPL'))",
          "go": "res, _, err := finnhubClient.CompanyProfile(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyProfile({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_profile({symbol: 'AAPL'}))",
          "kotlin": "println(apiClient.companyProfile(symbol = \"AAPL\", isin = null, cusip = null))",
          "php": "print_r($client->companyProfile(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"address\": \"1 Apple Park Way\",\n  \"city\": \"CUPERTINO\",\n  \"country\": \"US\",\n  \"currency\": \"USD\",\n  \"cusip\": \"\",\n  \"sedol\":\"2046251\",\n  \"description\": \"Apple Inc. is an American multinational technology company headquartered in Cupertino, California, that designs, develops, and sells consumer electronics, computer software, and online services. It is considered one of the Big Four technology companies, alongside Amazon, Google, and Microsoft. The company's hardware products include the iPhone smartphone, the iPad tablet computer, the Mac personal computer, the iPod portable media player, the Apple Watch smartwatch, the Apple TV digital media player, the AirPods wireless earbuds and the HomePod smart speaker. Apple's software includes the macOS, iOS, iPadOS, watchOS, and tvOS operating systems, the iTunes media player, the Safari web browser, the Shazam acoustic fingerprint utility, and the iLife and iWork creativity and productivity suites, as well as professional applications like Final Cut Pro, Logic Pro, and Xcode. Its online services include the iTunes Store, the iOS App Store, Mac App Store, Apple Music, Apple TV+, iMessage, and iCloud. Other services include Apple Store, Genius Bar, AppleCare, Apple Pay, Apple Pay Cash, and Apple Card.\",\n  \"employeeTotal\": \"137000\",\n  \"exchange\": \"NASDAQ/NMS (GLOBAL MARKET)\",\n  \"ggroup\": \"Technology Hardware & Equipment\",\n  \"gind\": \"Technology Hardware, Storage & Peripherals\",\n  \"gsector\": \"Information Technology\",\n  \"gsubind\": \"Technology Hardware, Storage & Peripherals\",\n  \"ipo\": \"1980-12-12\",\n  \"isin\": \"\",\n  \"marketCapitalization\": 1415993,\n  \"naics\": \"Communications Equipment Manufacturing\",\n  \"naicsNationalIndustry\": \"Radio and Television Broadcasting and Wireless Communications Equipment Manufacturing\",\n  \"naicsSector\": \"Manufacturing\",\n  \"naicsSubsector\": \"Computer and Electronic Product Manufacturing\",\n  \"name\": \"Apple Inc\",\n  \"phone\": \"14089961010\",\n  \"shareOutstanding\": 4375.47998046875,\n  \"state\": \"CALIFORNIA\",\n  \"ticker\": \"AAPL\",\n  \"weburl\": \"https://www.apple.com/\",\n  \"logo\": \"https://static.finnhub.io/logo/87cb30d8-80df-11ea-8951-00000000092a.png\",\n  \"finnhubIndustry\":\"Technology\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/profile2": {
      "get": {
        "summary": "Company Profile 2",
        "description": "Get general information of a company. You can query by symbol, ISIN or CUSIP. This is the free version of <a href=\"#company-profile\">Company Profile</a>.",
        "operationId": "company-profile2",
        "navHeader": "Company Profile 2",
        "urlId": "company-profile2",
        "title": "Global Company Profile 2",
        "examples": [
          {
            "url": "/stock/profile2?symbol=AAPL&token=<token>",
            "text": "/stock/profile2?symbol=AAPL"
          },
          {
            "url": "/stock/profile2?isin=US5949181045&token=<token>",
            "text": "/stock/profile2?isin=US5949181045"
          },
          {
            "url": "/stock/profile2?cusip=023135106&token=<token>",
            "text": "/stock/profile2?cusip=023135106"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": "New Endpoint",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL e.g.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "isin",
            "description": "ISIN",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cusip",
            "description": "CUSIP",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CompanyProfile2"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_profile2(symbol='AAPL'))",
          "go": "res, _, err := finnhubClient.CompanyProfile2(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyProfile2({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_profile2({symbol: 'AAPL'}))",
          "kotlin": "println(apiClient.companyProfile2(symbol = \"AAPL\", isin = null, cusip = null))",
          "php": "print_r($client->companyProfile2(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"country\": \"US\",\n  \"currency\": \"USD\",\n  \"exchange\": \"NASDAQ/NMS (GLOBAL MARKET)\",\n  \"ipo\": \"1980-12-12\",\n  \"marketCapitalization\": 1415993,\n  \"name\": \"Apple Inc\",\n  \"phone\": \"14089961010\",\n  \"shareOutstanding\": 4375.47998046875,\n  \"ticker\": \"AAPL\",\n  \"weburl\": \"https://www.apple.com/\",\n  \"logo\": \"https://static.finnhub.io/logo/87cb30d8-80df-11ea-8951-00000000092a.png\",\n  \"finnhubIndustry\":\"Technology\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/recommendation": {
      "get": {
        "summary": "Recommendation Trends",
        "description": "Get latest analyst recommendation trends for a company.",
        "operationId": "recommendation-trends",
        "navHeader": "Recommendation Trends",
        "urlId": "recommendation-trends",
        "title": "Analysts Recommendation Trends",
        "examples": [
          {
            "url": "/stock/recommendation?symbol=AAPL&token=<token>",
            "text": "/stock/recommendation?symbol=AAPL"
          },
          {
            "url": "/stock/recommendation?symbol=TSLA&token=<token>",
            "text": "/stock/recommendation?symbol=TSLA"
          }
        ],
        "widget": {
          "url": "https://widget.finnhub.io/widgets/recommendation?symbol=AAPL"
        },
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecommendationTrend"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.recommendation_trends('AAPL'))",
          "go": "res, _, err := finnhubClient.RecommendationTrends(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.recommendationTrends('AAPL', (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.recommendation_trends('AAPL'))",
          "kotlin": "println(apiClient.recommendationTrends(\"AAPL\"))",
          "php": "print_r($client->recommendationTrends(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"buy\": 24,\n    \"hold\": 7,\n    \"period\": \"2025-03-01\",\n    \"sell\": 0,\n    \"strongBuy\": 13,\n    \"strongSell\": 0,\n    \"symbol\": \"AAPL\"\n  },\n  {\n    \"buy\": 17,\n    \"hold\": 13,\n    \"period\": \"2025-02-01\",\n    \"sell\": 5,\n    \"strongBuy\": 13,\n    \"strongSell\": 0,\n    \"symbol\": \"AAPL\"\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/revenue-breakdown": {
      "get": {
        "summary": "Revenue Breakdown",
        "description": "<p>Get revenue breakdown as-reporetd by product and geography. Users on personal plans can access data for US companies which disclose their revenue breakdown in the annual or quarterly reports.</p><p>Global standardized revenue breakdown/segments data is available for Enterprise users. <a href=\"mailto:support@finnhub.io\">Contact us</a> to inquire about the access for Global standardized data.</p>",
        "operationId": "revenue-breakdown",
        "navHeader": "Revenue Breakdown",
        "urlId": "revenue-breakdown",
        "title": "Revenue Breakdown | Revenue Segment",
        "examples": [
          {
            "url": "/stock/revenue-breakdown?symbol=AAPL&token=<token>",
            "text": "/stock/revenue-breakdown?symbol=AAPL"
          },
          {
            "url": "/stock/revenue-breakdown?cik=320193&token=<token>",
            "text": "/stock/revenue-breakdown?cik=320193"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cik",
            "description": "CIK.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RevenueBreakdown"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_revenue_breakdown('AAPL'))",
          "go": "res, _, err := finnhubClient.RevenueBreakdown(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.revenueBreakdown({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.revenue_breakdown({symbol:'AAPL'}))\n",
          "kotlin": "println(apiClient.revenueBreakdown(\"AAPL\", \"\"))",
          "php": "print_r($client->revenueBreakdown(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"data\": [\n    {\n      \"accessNumber\": \"0000320193-21-000010\",\n      \"breakdown\": {\n        \"unit\": \"usd\",\n        \"value\": 111439000000,\n        \"concept\": \"us-gaap:RevenueFromContractWithCustomerExcludingAssessedTax\",\n        \"endDate\": \"2020-12-26\",\n        \"startDate\": \"2020-09-27\",\n        \"revenueBreakdown\": [\n          {\n            \"axis\": \"srt:ProductOrServiceAxis\",\n            \"data\": [\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Products\",\n                \"value\": 95678000000,\n                \"member\": \"us-gaap:ProductMember\",\n                \"percentage\": 85.85683647556061\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Services\",\n                \"value\": 15761000000,\n                \"member\": \"us-gaap:ServiceMember\",\n                \"percentage\": 14.14316352443938\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Services\",\n                \"value\": 15761000000,\n                \"member\": \"us-gaap:ServiceMember\",\n                \"percentage\": 14.14316352443938\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"iPhone\",\n                \"value\": 65597000000,\n                \"member\": \"aapl:IPhoneMember\",\n                \"percentage\": 58.86359353547681\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Mac\",\n                \"value\": 8675000000,\n                \"member\": \"aapl:MacMember\",\n                \"percentage\": 7.784527858290185\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"iPad\",\n                \"value\": 8435000000,\n                \"member\": \"aapl:IPadMember\",\n                \"percentage\": 7.569163398810111\n              },\n              {\n                \"unit\": \"usd\",\n                \"label\": \"Wearables, Home and Accessories\",\n                \"value\": 12971000000,\n                \"member\": \"aapl:WearablesHomeandAccessoriesMember\",\n                \"percentage\": 11.639551682983516\n              }\n            ],\n            \"label\": \"Product and Service [Axis]\"\n          },\n        ]\n      }\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/revenue-breakdown2": {
      "get": {
        "summary": "Revenue Breakdown & KPI",
        "description": "<p>Get standardized revenue breakdown and KPIs data for 30,000+ global companies.</p>",
        "operationId": "revenue-breakdown2",
        "navHeader": "Revenue Breakdown & KPI",
        "urlId": "revenue-breakdown-kpi-api",
        "title": "Revenue Breakdown | Revenue Segment & KPIs",
        "examples": [
          {
            "url": "/stock/revenue-breakdown2?symbol=AAPL&token=<token>",
            "text": "/stock/revenue-breakdown2?symbol=AAPL"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Enterprise data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RevenueBreakdown2"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_revenue_breakdown2('AAPL'))",
          "go": "res, _, err := finnhubClient.RevenueBreakdown2(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.revenueBreakdown2({'symbol': 'AAPL'}, (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.revenue_breakdown2({symbol:'AAPL'}))\n",
          "kotlin": "println(apiClient.revenueBreakdown2(\"AAPL\", \"\"))",
          "php": "print_r($client->revenueBreakdown2(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"currency\": \"USD\",\n  \"data\": {\n    \"annual\": {\n      \"revenue_by_geography\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2023-09-30\",\n                \"value\": 162560000000\n              },\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 167045000000\n              }\n            ],\n            \"label\": \"Americas\"\n          }\n        ]\n      ],\n      \"revenue_by_product\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2023-09-30\",\n                \"value\": 200583000000\n              },\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 201183000000\n              }\n            ],\n            \"label\": \"iPhone\"\n          }\n        ]\n      ]\n    },\n    \"quarterly\": {\n      \"revenue_by_geography\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 41664000000\n              },\n              {\n                \"period\": \"2024-12-28\",\n                \"value\": 52648000000\n              }\n            ],\n            \"label\": \"Americas\"\n          }\n        ]\n      ],\n      \"revenue_by_product\": [\n        [\n          {\n            \"data\": [\n              {\n                \"period\": \"2024-09-28\",\n                \"value\": 46222000000\n              },\n              {\n                \"period\": \"2024-12-28\",\n                \"value\": 69138000000\n              }\n            ],\n            \"label\": \"iPhone\"\n          }\n        ]\n      ]\n    }\n  },\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/revenue-estimate": {
      "get": {
        "summary": "Revenue Estimates",
        "description": "Get company's revenue estimates.",
        "operationId": "company-revenue-estimates",
        "navHeader": "Revenue Estimates",
        "urlId": "company-revenue-estimates",
        "title": "Global Company Revenue Estimates",
        "examples": [
          {
            "url": "/stock/revenue-estimate?symbol=AAPL&token=<token>",
            "text": "/stock/revenue-estimate?symbol=AAPL"
          },
          {
            "url": "/stock/revenue-estimate?symbol=TSLA&freq=annual&token=<token>",
            "text": "/stock/revenue-estimate?symbol=TSLA&freq=annual"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "Can take 1 of the following values: <code>annual, quarterly</code>. Default to <code>quarterly</code>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/RevenueEstimates"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.company_revenue_estimates('TSLA', freq='quarterly'))",
          "go": "res, _, err := finnhubClient.CompanyRevenueEstimates(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.companyRevenueEstimates(\"AAPL\", {}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.company_revenue_estimates('TSLA', {freq: 'quarterly'}))",
          "kotlin": "println(apiClient.companyRevenueEstimates(\"TSLA\", freq = \"quarterly\"))",
          "php": "print_r($client->companyRevenueEstimates(\"TSLA\", \"quarterly\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-06-30\",\n      \"revenueAvg\": 58800500000,\n      \"revenueHigh\": 64060000000,\n      \"revenueLow\": 54072000000,\n      \"quarter\": 3,\n      \"year\": 2020\n    },\n    {\n      \"numberAnalysts\": 31,\n      \"period\": \"2020-03-31\",\n      \"revenueAvg\": 61287300000,\n      \"revenueHigh\": 66557000000,\n      \"revenueLow\": 54871000000,\n      \"quarter\": 2,\n      \"year\": 2020\n    }\n  ],\n  \"freq\": \"quarterly\",\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/similarity-index": {
      "get": {
        "summary": "Similarity Index",
        "description": "<p>Calculate the textual difference between a company's 10-K / 10-Q reports and the same type of report in the previous year using Cosine Similarity. For example, this endpoint compares 2019's 10-K with 2018's 10-K. Companies breaking from its routines in disclosure of financial condition and risk analysis section can signal a significant change in the company's stock price in the upcoming 4 quarters.</p>",
        "operationId": "similarity-index",
        "navHeader": "Similarity Index",
        "urlId": "similarity-index",
        "title": "SEC Filings - Similarity Index Analysis",
        "examples": [
          {
            "url": "/stock/similarity-index?symbol=AAPL&freq=annual&token=<token>",
            "text": "/stock/similarity-index?symbol=AAPL&freq=annual"
          },
          {
            "url": "/stock/similarity-index?cik=320193&freq=quarterly&token=<token>",
            "text": "/stock/similarity-index?cik=320193&freq=quarterly"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol. Required if cik is empty",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cik",
            "description": "CIK. Required if symbol is empty",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "freq",
            "description": "<code>annual</code> or <code>quarterly</code>. Default to <code>annual</code>",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/SimilarityIndex"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.sec_similarity_index('AAPL'))",
          "go": "res, _, err := finnhubClient.SimilarityIndex(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.similarityIndex({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.similarity_index({symbol: 'AAPL'}))",
          "kotlin": "println(apiClient.similarityIndex(\"AAPL\", \"\", \"annual\"))",
          "php": "print_r($client->similarityIndex(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"cik\": \"320193\",\n  \"similarity\": [\n    {\n      \"cik\": \"320193\",\n      \"accessNumber\": \"0000320193-19-000119\",\n      \"item1\": 0.8833750347608914,\n      \"item2\": 0,\n      \"item1a\": 0.994836154829746,\n      \"item7\": 0.897030072745,\n      \"item7a\": 0.9843052590436008,\n      \"form\": \"10-K\",\n      \"reportUrl\": \"https://www.sec.gov/ix?doc=/Archives/edgar/data/320193/000032019319000119/a10-k20199282019.htm\",\n      \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000032019319000119/0000320193-19-000119-index.html\",\n      \"filedDate\": \"2019-10-31 00:00:00\",\n      \"acceptedDate\": \"2019-10-30 18:12:36\"\n    },\n    {\n      \"cik\": \"320193\",\n      \"accessNumber\": \"0000320193-18-000145\",\n      \"item1\": 0.9737784696339462,\n      \"item2\": 0,\n      \"item1a\": 0.9931651573630014,\n      \"item7\": 0.9441063774798184,\n      \"item7a\": 0.9856181212005336,\n      \"form\": \"10-K\",\n      \"reportUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000032019318000145/a10-k20189292018.htm\",\n      \"filingUrl\": \"https://www.sec.gov/Archives/edgar/data/320193/000032019318000145/0000320193-18-000145-index.html\",\n      \"filedDate\": \"2018-11-05 00:00:00\",\n      \"acceptedDate\": \"2018-11-05 08:01:40\"\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/social-sentiment": {
      "get": {
        "summary": "Social Sentiment",
        "description": "<p>Get social sentiment for stocks on Reddit and Twitter.</p>",
        "operationId": "social-sentiment",
        "navHeader": "Social Sentiment",
        "urlId": "social-sentiment",
        "title": "Stocks Social Media Sentiment",
        "examples": [
          {
            "url": "/stock/social-sentiment?symbol=GME&token=<token>",
            "text": "/stock/social-sentiment?symbol=GME"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Company symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/SocialSentiment"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_social_sentiment('GME'))",
          "go": "res, _, err := finnhubClient.SocialSentiment(context.Background()).Symbol(\"GME\").Execute()",
          "javascript": "finnhubClient.socialSentiment('GME', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.social_sentiment('GME'))",
          "kotlin": "println(apiClient.socialSentiment(\"GME\", \"\", \"\"))",
          "php": "print_r($client->socialSentiment(\"GME\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"atTime\": \"2021-05-08 14:00:00\",\n      \"mention\": 32,\n      \"positiveScore\": 0.9213675,\n      \"negativeScore\": -0.9864475,\n      \"positiveMention\": 20,\n      \"negativeMention\": 12,\n      \"score\": -0.0341123222115352\n    },\n    {\n      \"atTime\": \"2021-05-08 13:00:00\",\n      \"mention\": 25,\n      \"positiveScore\": 0.92,\n      \"negativeScore\": -0.991266,\n      \"positiveMention\": 8,\n      \"negativeMention\": 17,\n      \"score\": -0.56282\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/split": {
      "get": {
        "summary": "Splits",
        "description": "Get splits data for stocks.",
        "operationId": "stock-splits",
        "navHeader": "Splits",
        "urlId": "stock-splits",
        "title": "Global Stocks Splits API",
        "examples": [
          {
            "url": "/stock/split?symbol=AAPL&from=2015-02-01&to=2021-03-09&token=<token>",
            "text": "/stock/split?symbol=AAPL&from=2015-02-01&to=2021-03-09"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "YYYY-MM-DD.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "YYYY-MM-DD.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Split"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_splits('AAPL', _from='2000-01-01', to='2020-01-01'))",
          "go": "res, _, err := finnhubClient.StockSplits(context.Background()).Symbol(\"AAPL\").From(\"2000-01-01\").To(\"2020-06-15\").Execute()",
          "javascript": "finnhubClient.stockSplits(\"AAPL\", \"2000-01-01\", \"2020-06-15\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_splits('AAPL', '2000-01-01', '2020-01-01'))",
          "kotlin": "println(apiClient.stockSplits(symbol = \"AAPL\", from = \"2000-01-01\", to = \"2020-01-01\"))",
          "php": "print_r($client->stockSplits(\"AAPL\", \"2000-01-01\", \"2020-01-01\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"AAPL\",\n    \"date\": \"2014-06-09\",\n    \"fromFactor\": 1,\n    \"toFactor\": 7\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/supply-chain": {
      "get": {
        "summary": "Supply Chain Relationships",
        "description": "<p>This endpoint provides an overall map of public companies' key customers and suppliers. The data offers a deeper look into a company's supply chain and how products are created. The data will help investors manage risk, limit exposure or generate alpha-generating ideas and trading insights.</p>",
        "operationId": "supply-chain-relationships",
        "navHeader": "Supply Chain",
        "urlId": "supply-chain-relationships",
        "title": "Supply Chain Relationships",
        "examples": [
          {
            "url": "/stock/supply-chain?symbol=AAPL&token=<token>",
            "text": "/stock/supply-chain?symbol=AAPL"
          },
          {
            "url": "/stock/supply-chain?symbol=WMT&token=<token>",
            "text": "/stock/supply-chain?symbol=WMT"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/SupplyChainRelationships"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_supply_chain('AAPL'))",
          "go": "res, _, err := finnhubClient.SupplyChainRelationships(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.supplyChainRelationships('AAPL', (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.supply_chain_relationships('AAPL'))",
          "kotlin": "println(apiClient.supplyChainRelationships(\"AAPL\"))",
          "php": "print_r($client->supplyChainRelationships(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"customer\": true,\n      \"name\": \"Costco Wholesale Corporation\",\n      \"oneMonthCorrelation\": 0.26,\n      \"oneYearCorrelation\": 0.63,\n      \"sixMonthCorrelation\": 0.87,\n      \"supplier\": false,\n      \"symbol\": \"COST\",\n      \"threeMonthCorrelation\": 0.89,\n      \"twoWeekCorrelation\": 0.35,\n      \"twoYearCorrelation\": 0.91\n    },\n    {\n      \"customer\": true,\n      \"name\": \"Qualcomm\",\n      \"oneMonthCorrelation\": 0.06,\n      \"oneYearCorrelation\": 0.58,\n      \"sixMonthCorrelation\": 0.87,\n      \"supplier\": true,\n      \"symbol\": \"QCOM\",\n      \"threeMonthCorrelation\": 0.88,\n      \"twoWeekCorrelation\": 0.71,\n      \"twoYearCorrelation\": 0.94\n    },\n    {\n      \"customer\": false,\n      \"name\": \"Foxconn Industrial Internet Co., Ltd.\",\n      \"oneMonthCorrelation\": 0.25,\n      \"oneYearCorrelation\": -0.48,\n      \"sixMonthCorrelation\": -0.65,\n      \"supplier\": true,\n      \"symbol\": \"601138.SS\",\n      \"threeMonthCorrelation\": -0.79,\n      \"twoWeekCorrelation\": -0.55,\n      \"twoYearCorrelation\": -0.6\n    }\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/symbol": {
      "get": {
        "summary": "Stock Symbol",
        "description": "List supported stocks. We use the following symbology to identify stocks on Finnhub <code>Exchange_Ticker.Exchange_Code</code>. A list of supported exchange codes can be found <a href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\" target=\"_blank\">here</a>.",
        "operationId": "stock-symbols",
        "navHeader": "Stock Symbols",
        "urlId": "stock-symbols",
        "title": "Stock Symbols By Exchange",
        "examples": [
          {
            "url": "/stock/symbol?exchange=US&token=<token>",
            "text": "/stock/symbol?exchange=US"
          },
          {
            "url": "/stock/symbol?exchange=US&mic=XNYS&token=<token>",
            "text": "/stock/symbol?exchange=US&mic=XNYS"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Fundamentals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Exchange you want to get the list of symbols from. List of exchange codes can be found <a href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\" target=\"_blank\">here</a>.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "mic",
            "description": "Filter by MIC code.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "securityType",
            "description": "Filter by security type used by OpenFigi standard.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "currency",
            "description": "Filter by currency.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockSymbol"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_symbols('US'))",
          "go": "res, _, err := finnhubClient.StockSymbols(context.Background()).Exchange(\"US\").Execute()",
          "javascript": "finnhubClient.stockSymbols(\"US\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_symbols('US'))",
          "kotlin": "println(apiClient.stockSymbols(\"US\", \"\", \"\", \"\"))",
          "php": "print_r($client->stockSymbols(\"US\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"currency\": \"USD\",\n    \"description\": \"UAN POWER CORP\",\n    \"displaySymbol\": \"UPOW\",\n    \"figi\": \"BBG000BGHYF2\",\n    \"mic\": \"OTCM\",\n    \"symbol\": \"UPOW\",\n    \"type\": \"Common Stock\"\n  },\n  {\n    \"currency\": \"USD\",\n    \"description\": \"APPLE INC\",\n    \"displaySymbol\": \"AAPL\",\n    \"figi\": \"BBG000B9Y5X2\",\n    \"mic\": \"XNGS\",\n    \"symbol\": \"AAPL\",\n    \"type\": \"Common Stock\"\n  },\n  {\n    \"currency\": \"USD\",\n    \"description\": \"EXCO TECHNOLOGIES LTD\",\n    \"displaySymbol\": \"EXCOF\",\n    \"figi\": \"BBG000JHDDS8\",\n    \"mic\": \"OOTC\",\n    \"symbol\": \"EXCOF\",\n    \"type\": \"Common Stock\"\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/tick": {
      "get": {
        "summary": "Tick Data",
        "description": "<p>Get historical tick data for global exchanges.</p><p>For more historical tick data, you can visit our bulk download page in the Dashboard <a target=\"_blank\" href=\"/dashboard/download\",>here</a> to speed up the download process.</p><table class=\"table table-hover\">\n  <thead>\n    <tr>\n      <th>Exchange</th>\n      <th>Segment</th>\n      <th>Delay</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td class=\"text-blue\">US CTA/UTP</th>\n      <td>Full SIP</td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">TSX</th>\n      <td><ul><li>TSX</li><li>TSX Venture</li><li>Index</li></ul></td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">LSE</th>\n      <td><ul><li>London Stock Exchange (L)</li><li>LSE International (L)</li><li>LSE European (L)</li></ul></td>\n      <td>15 minute</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Euronext</th>\n      <td><ul> <li>Euronext Paris (PA)</li> <li>Euronext Amsterdam (AS)</li> <li>Euronext Lisbon (LS)</li> <li>Euronext Brussels (BR)</li> <li>Euronext Oslo (OL)</li> <li>Euronext London (LN)</li> <li>Euronext Dublin (IR)</li> <li>Index</li> <li>Warrant</li></ul></td>\n      <td>End-of-day</td>\n    </tr>\n    <tr>\n      <td class=\"text-blue\">Deutsche B\u00f6rse</th>\n      <td><ul> <li>Frankfurt (F)</li> <li>Xetra (DE)</li> <li>Duesseldorf (DU)</li> <li>Hamburg (HM)</li> <li>Berlin (BE)</li> <li>Hanover (HA)</li> <li>Stoxx (SX)</li> <li>TradeGate (TG)</li> <li>Zertifikate (SC)</li> <li>Index</li> <li>Warrant</li></ul></td>\n      <td>End-of-day</td>\n    </tr>\n  </tbody>\n</table>",
        "operationId": "stock-tick",
        "navHeader": "Tick/Trade Data",
        "urlId": "stock-tick",
        "title": "Global Stocks Tick Data",
        "examples": [
          {
            "url": "/stock/tick?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json&token=<token>",
            "text": "/stock/tick?symbol=AAPL&date=2021-03-09&limit=500&skip=0&format=json"
          },
          {
            "url": "/stock/tick?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json&token=<token>",
            "text": "/stock/tick?symbol=AC.TO&date=2021-03-09&limit=500&skip=0&format=json"
          },
          {
            "url": "/stock/tick?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json&token=<token>",
            "text": "/stock/tick?symbol=BARC.L&date=2021-03-09&limit=500&skip=0&format=json"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Price",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date: 2020-04-02.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit number of ticks returned. Maximum value: <code>25000</code>",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Number of ticks to skip. Use this parameter to loop through the entire data.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/TickData"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_tick('AAPL', '2020-03-25', 500, 0))",
          "go": "res, _, err := finnhubClient.StockTick(context.Background()).Symbol(\"AAPL\").Date(\"2021-07-23\").Limit(50).Skip(0).Execute()",
          "javascript": "finnhubClient.stockTick(\"AAPL\", \"2020-03-25\", 500, 0, (error, data, response) => {\n  console.log(data);\n});",
          "ruby": "puts(finnhub_client.stock_tick('AAPL', '2020-03-25', 500, 0))",
          "kotlin": "println(apiClient.stockTick(\"AAPL\", \"2020-03-25\", 500, 0))",
          "php": "print_r($client->stockTick(\"AAPL\", \"2020-03-25\", 500, 0));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"p\": [\n    255,\n    255,\n    255\n  ],\n  \"s\": \"AAPL\",\n  \"skip\": 0,\n  \"t\": [\n    1585108800073,\n    1585108800315,\n    1585108800381\n  ],\n  \"v\": [\n    2513,\n    24,\n    1\n  ],\n  \"x\": [\n    \"P\",\n    \"P\",\n    \"P\"\n  ],\n  \"count\": 3,\n  \"c\":[[\"1\",\"24\"],[\"1\",\"24\",\"12\"],[\"1\",\"24\",\"12\"]]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/transcripts": {
      "get": {
        "summary": "Earnings Call Transcripts",
        "description": "<p>Get earnings call transcripts, audio and participants' list. Data is available for US, UK, European, Australian and Canadian companies.<p>15+ years of data is available with 220,000+ audio which add up to 7TB in size.</p>",
        "operationId": "transcripts",
        "navHeader": "Transcripts",
        "urlId": "earnings-call-transcripts-api",
        "title": "Earnings Call Transcripts API | Finnhub Stock API",
        "examples": [
          {
            "url": "/stock/transcripts?id=AAPL_162777&token=<token>",
            "text": "/stock/transcripts?id=AAPL_162777"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Transcript's id obtained with <a href=\"#transcripts-list\">Transcripts List endpoint</a>.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EarningsCallTranscripts"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.transcripts('AAPL_162777'))",
          "go": "res, _, err := finnhubClient.Transcripts(context.Background()).Id(\"AAPL_162777\").Execute()",
          "javascript": "finnhubClient.transcripts(\"AAPL_162777\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.transcripts('AAPL_162777'))",
          "kotlin": "println(apiClient.transcripts(\"AAPL_162777\"))",
          "php": "print_r($client->transcripts(\"AAPL_162777\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"audio\": \"https://static.finnhub.io/transcripts_audio/4319666.mp3\",\n  \"id\": \"AAPL_326091\",\n  \"participant\": [\n    {\n      \"name\": \"Tejas Gala\",\n      \"description\": \"Senior Analyst at Corporate Finance and IR\"\n    },\n    {\n      \"name\": \"Tim Cook\",\n      \"description\": \"CEO\"\n    }\n  ],\n  \"quarter\": 1,\n  \"symbol\": \"AAPL\",\n  \"time\": \"2020-01-28 21:35:45\",\n  \"title\": \"AAPL - Earnings call transcripts Q1 2020\",\n  \"transcript\": [\n    {\n      \"name\": \"Operator\",\n      \"speech\": [\n        \"Good day, everyone. Welcome to the Apple Incorporated First Quarter Fiscal Year 2020 Earnings Conference Call. Today's conference is being recorded. At this time for opening remarks and introductions, I would like to turn the call over to Tejas Gala, Senior Analyst, Corporate Finance and Investor Relations. Please go ahead.\"\n      ]\n    },\n    {\n      \"name\": \"Tejas Gala\",\n      \"speech\": [\n        \"Thank you. Good afternoon, and thank you for joining us. Speaking first today is Apple's CEO, Tim Cook, and he'll be followed by CFO, Luca Maestri. After that, we'll open the call to questions from analysts. Please note that some of the information you'll hear during our discussion today will consist of forward-looking statements, including without limitation, those regarding revenue, gross margin, operating expenses, other income and expenses, taxes, capital allocation and future business outlook. Actual results or trends could differ materially from our forecast. For more information, please refer to the risk factors discussed in Apple's most recently filed periodic reports on Form 10-K and Form 10-Q and the Form 8-K filed with the SEC today, along with the associated press release. Apple assumes no obligation to update any forward-looking statements or information, which speaks as of their respective dates. I'd now like to turn the call over to Tim for introductory remarks.\"\n      ]\n    }\n  ],\n  \"year\": 2020\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/transcripts/list": {
      "get": {
        "summary": "Earnings Call Transcripts List",
        "description": "List earnings call transcripts' metadata. This endpoint is available for US, UK, European, Australian and Canadian companies.",
        "operationId": "transcripts-list",
        "navHeader": "Transcripts List",
        "urlId": "transcripts-list",
        "title": "List Earnings Call Transcripts",
        "examples": [
          {
            "url": "/stock/transcripts/list?symbol=AAPL&token=<token>",
            "text": "/stock/transcripts/list?symbol=AAPL"
          },
          {
            "url": "/stock/transcripts/list?symbol=AC.TO&token=<token>",
            "text": "/stock/transcripts/list?symbol=AC.TO"
          },
          {
            "url": "/stock/transcripts/list?symbol=BARC.L&token=<token>",
            "text": "/stock/transcripts/list?symbol=BARC.L"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium required.",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Company symbol: AAPL. Leave empty to list the latest transcripts",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EarningsCallTranscriptsList"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.transcripts_list('AAPL'))",
          "go": "res, _, err := finnhubClient.TranscriptsList(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.transcriptsList(\"AAPL\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.transcripts_list('AAPL'))",
          "kotlin": "println(apiClient.transcriptsList(\"AAPL\"))",
          "php": "print_r($client->transcriptsList(\"AAPL\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"symbol\": \"AAPL\",\n  \"transcripts\": [\n    {\n      \"id\": \"AAPL_326091\",\n      \"quarter\": 1,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2020-01-28 21:35:45\",\n      \"title\": \"AAPL - Earnings Call Transcript Q1 2020\",\n      \"year\": 2020\n    },\n    {\n      \"id\": \"AAPL_322579\",\n      \"quarter\": 4,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-10-30 22:27:15\",\n      \"title\": \"AAPL - Earnings Call Transcript Q4 2019\",\n      \"year\": 2019\n    },\n    {\n      \"id\": \"AAPL_318112\",\n      \"quarter\": 3,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-07-30 22:26:28\",\n      \"title\": \"AAPL - Earnings Call Transcript Q3 2019\",\n      \"year\": 2019\n    },\n    {\n      \"id\": \"AAPL_313737\",\n      \"quarter\": 2,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-04-30 19:55:19\",\n      \"title\": \"AAPL - Earnings Call Transcript Q2 2019\",\n      \"year\": 2019\n    },\n    {\n      \"id\": \"AAPL_308757\",\n      \"quarter\": 1,\n      \"symbol\": \"AAPL\",\n      \"time\": \"2019-01-29 21:06:06\",\n      \"title\": \"AAPL - Earnings Call Transcript Q1 2019\",\n      \"year\": 2019\n    }\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/upgrade-downgrade": {
      "get": {
        "summary": "Stock Upgrade/Downgrade",
        "description": "Get latest stock upgrade and downgrade.",
        "operationId": "upgrade-downgrade",
        "navHeader": "Upgrade Downgrade",
        "urlId": "upgrade-downgrade",
        "title": "Real-time Stocks Upgrade/Downgrade",
        "examples": [
          {
            "url": "/stock/upgrade-downgrade?symbol=AAPL&token=<token>",
            "text": "/stock/upgrade-downgrade?symbol=AAPL"
          },
          {
            "url": "/stock/upgrade-downgrade?symbol=BYND&token=<token>",
            "text": "/stock/upgrade-downgrade?symbol=BYND"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Stock Estimates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol of the company: AAPL. If left blank, the API will return latest stock upgrades/downgrades.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date: 2000-03-15.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date: 2020-03-16.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpgradeDowngrade"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.upgrade_downgrade(symbol='AAPL', _from='2020-01-01', to='2020-06-30'))",
          "go": "res, _, err := finnhubClient.UpgradeDowngrade(context.Background()).Symbol(\"AAPL\").Execute()",
          "javascript": "finnhubClient.upgradeDowngrade({\"symbol\": \"AAPL\"}, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.upgrade_downgrade({symbol: 'AAPL', from: '2020-01-01', to: '2020-06-30'}))",
          "kotlin": "println(apiClient.upgradeDowngrade(symbol = \"AAPL\", from = \"2020-01-01\", to = \"2020-06-30\"))",
          "php": "print_r($client->upgradeDowngrade(\"AAPL\", \"2020-01-01\", \"2020-06-30\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"symbol\": \"BYND\",\n    \"gradeTime\": 1567728000,\n    \"company\": \"DA Davidson\",\n    \"fromGrade\": \"\",\n    \"toGrade\": \"Underperform\",\n    \"action\": \"init\"\n  },\n  {\n    \"symbol\": \"BYND\",\n    \"gradeTime\": 1566259200,\n    \"company\": \"JP Morgan\",\n    \"fromGrade\": \"Neutral\",\n    \"toGrade\": \"Overweight\",\n    \"action\": \"up\"\n  },\n  {\n    \"symbol\": \"BYND\",\n    \"gradeTime\": 1564704000,\n    \"company\": \"Bank of America\",\n    \"fromGrade\": \"\",\n    \"toGrade\": \"Neutral\",\n    \"action\": \"reit\"\n  }\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/usa-spending": {
      "get": {
        "summary": "USA Spending",
        "description": "Get a list of government's spending activities from USASpending dataset for public companies. This dataset can help you identify companies that win big government contracts which is extremely important for industries such as Defense, Aerospace, and Education.",
        "operationId": "stock-usa-spending",
        "navHeader": "USA Spending",
        "urlId": "stock-usa-spending",
        "title": "USA Spending | Government contracts API",
        "examples": [
          {
            "url": "/stock/usa-spending?symbol=LMT&from=2021-01-01&to=2022-12-31&token=<token>",
            "text": "/stock/usa-spending?symbol=LMT&from=2021-01-01&to=2022-12-31"
          },
          {
            "url": "/stock/usa-spending?symbol=BA&from=2021-01-01&to=2022-12-31&token=<token>",
            "text": "/stock/usa-spending?symbol=BA&from=2021-01-01&to=2022-12-31"
          }
        ],
        "widget": null,
        "premium": null,
        "newEndpoint": "New",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>. Filter for <code>actionDate</code>",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>. Filter for <code>actionDate</code>",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UsaSpendingResult"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_usa_spending(\"AAPL\", \"2021-01-01\", \"2022-06-15\"))",
          "go": "res, _, err := finnhubClient.StockUsaSpending(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2022-05-01\").Execute()",
          "javascript": "finnhubClient.stockUsaSpending(\"AAPL\", \"2020-01-01\", \"2022-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_usa_spending('AAPL', \"2020-06-01\", \"2022-06-10\"))",
          "kotlin": "println(apiClient.stockUsaSpending(\"AAPL\", from = \"2020-06-01\", to = \"2022-06-10\"))",
          "php": "print_r($client->stockUsaSpending(\"AAPL\", \"2020-06-01\", \"2022-06-10\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\":[\n    {\n      \"symbol\":\"AAPL\",\n      \"recipientName\":\"APPLE INC.\",\n      \"recipientParentName\":\"APPLE INC.\",\n      \"country\":\"USA\",\n      \"totalValue\":4238,\n      \"actionDate\":\"2021-11-12\",\n      \"performanceStartDate\":\"2021-11-12\",\n      \"performanceEndDate\":\"2021-12-10\",\n      \"awardingAgencyName\":\"SMITHSONIAN INSTITUTION (SI)\",\n      \"awardingSubAgencyName\":\"SMITHSONIAN INSTITUTION\",\n      \"awardingOfficeName\":\"SMITHSONIAN ASTROPHYSICAL OBSERVATORY\",\n      \"performanceCountry\":\"USA\",\n      \"performanceCity\":\"CUPERTINO\",\n      \"performanceCounty\":\"SANTA CLARA\",\n      \"performanceState\":\"CALIFORNIA\",\n      \"performanceZipCode\":\"950140642\",\n      \"performanceCongressionalDistrict\":\"17\",\n      \"awardDescription\":\"MACBOOK PRO\",\n      \"naicsCode\":\"334111\",\n      \"permalink\":\"https://www.usaspending.gov/award/CONT_AWD_33131222P00465925_3300_-NONE-_-NONE-/\"\n    }\n  ],\n  \"symbol\":\"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/uspto-patent": {
      "get": {
        "summary": "USPTO Patents",
        "description": "List USPTO patents for companies. Limit to 250 records per API call.",
        "operationId": "stock-uspto-patent",
        "navHeader": "USPTO Patents",
        "urlId": "stock-uspto-patent",
        "title": "USPTO Patents",
        "examples": [
          {
            "url": "/stock/uspto-patent?symbol=NVDA&from=2021-01-01&to=2021-12-31&token=<token>",
            "text": "/stock/uspto-patent?symbol=NVDA&from=2021-01-01&to=2021-12-31"
          }
        ],
        "widget": null,
        "premium": null,
        "newEndpoint": "New",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/UsptoPatentResult"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_uspto_patent('NVDA', _from=\"2020-06-01\", to=\"2021-06-10\"))",
          "go": "res, _, err := finnhubClient.StockUsptoPatent(context.Background()).Symbol(\"NVDA\").From(\"2020-05-01\").To(\"2021-05-01\").Execute()",
          "javascript": "finnhubClient.stockUsptoPatent(\"NVDA\", \"2020-01-01\", \"2021-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_uspto_patent('NVDA', \"2020-06-01\", \"2021-06-10\"))",
          "kotlin": "println(apiClient.stockUsptoPatent(\"NVDA\", from = \"2020-06-01\", to = \"2021-06-10\"))",
          "php": "print_r($client->stockUsptoPatent(\"NVDA\", \"2020-06-01\", \"2021-06-10\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n   \"data\":[\n      {\n         \"applicationNumber\":\"17163855\",\n         \"companyFilingName\":[\n            \"NVIDIA CORPORATION\"\n         ],\n         \"description\":\"DYNAMIC DIRECTIONAL ROUNDING\",\n         \"filingDate\":\"2021-02-01 00:00:00\",\n         \"filingStatus\":\"Application\",\n         \"patentNumber\":\"US20210232366A1\",\n         \"publicationDate\":\"2021-07-29 00:00:00\",\n         \"type\":\"Utility\",\n         \"url\":\"https://patentimages.storage.googleapis.com/33/ed/0c/0b6b6f87e55fea/US20210232366A1.pdf\"\n      },\n      {\n         \"applicationNumber\":\"17162550\",\n         \"companyFilingName\":[\n            \"NVIDIA CORPORATION\"\n         ],\n         \"description\":\"REAL-TIME HARDWARE-ASSISTED GPU TUNING USING MACHINE LEARNING\",\n         \"filingDate\":\"2021-01-29 00:00:00\",\n         \"filingStatus\":\"Application\",\n         \"patentNumber\":\"US20210174569A1\",\n         \"publicationDate\":\"2021-06-10 00:00:00\",\n         \"type\":\"Utility\",\n         \"url\":\"https://patentimages.storage.googleapis.com/23/40/45/98b27a921d657c/US20210174569A1.pdf\"\n      }\n   ],\n   \"symbol\":\"NVDA\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/stock/visa-application": {
      "get": {
        "summary": "H1-B Visa Application",
        "description": "Get a list of H1-B and Permanent visa applications for companies from the DOL. The data is updated quarterly.",
        "operationId": "stock-visa-application",
        "navHeader": "Visa Application",
        "urlId": "stock-visa-application",
        "title": "H1-B Visa Application API for public companies",
        "examples": [
          {
            "url": "/stock/visa-application?symbol=AAPL&from=2021-01-01&to=2021-12-31&token=<token>",
            "text": "/stock/visa-application?symbol=AAPL&from=2021-01-01&to=2021-12-31"
          }
        ],
        "widget": null,
        "premium": null,
        "newEndpoint": "New",
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Alternative Data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Symbol.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "From date <code>YYYY-MM-DD</code>. Filter on the <code>beginDate</code> column.",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "to",
            "description": "To date <code>YYYY-MM-DD</code>. Filter on the <code>beginDate</code> column.",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/VisaApplicationResult"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.stock_visa_application(\"AAPL\", \"2021-01-01\", \"2022-06-15\"))",
          "go": "res, _, err := finnhubClient.StockVisaApplication(context.Background()).Symbol(\"AAPL\").From(\"2020-05-01\").To(\"2021-05-01\").Execute()",
          "javascript": "finnhubClient.stockVisaApplication(\"AAPL\", \"2020-01-01\", \"2021-05-01\", (error, data, response) => {\n\tconsole.log(data)\n});",
          "ruby": "puts(finnhub_client.stock_visa_application('AAPL', \"2020-06-01\", \"2021-06-10\"))",
          "kotlin": "println(apiClient.stockVisaApplication(\"AAPL\", from = \"2020-06-01\", to = \"2021-06-10\"))",
          "php": "print_r($client->stockVisaApplication(\"AAPL\", \"2020-06-01\", \"2021-06-10\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"data\": [\n    {\n      \"year\": 2020,\n      \"quarter\": 1,\n      \"symbol\": \"AAPL\",\n      \"caseNumber\": \"I-200-19268-472068\",\n      \"caseStatus\": \"Certified\",\n      \"receivedDate\": \"2019-09-25\",\n      \"visaClass\": \"H-1B\",\n      \"jobTitle\": \"ASIC DESIGN VERIFICATION ENGINEER\",\n      \"socCode\": \"17-2072\",\n      \"fullTimePosition\": \"Y\",\n      \"beginDate\": \"2019-10-14\",\n      \"endDate\": \"2022-10-13\",\n      \"employerName\": \"APPLE INC.\",\n      \"worksiteAddress\": \"320 S Capital of Texas Highway\",\n      \"worksiteCity\": \"West Lake Hills\",\n      \"worksiteCounty\": \"Travis\",\n      \"worksiteState\": \"TX\",\n      \"worksitePostalCode\": \"78746\",\n      \"wageRangeFrom\": 120000,\n      \"wageRangeTo\": null,\n      \"wageUnitOfPay\": \"Year\",\n      \"wageLevel\": \"II\",\n      \"h1bDependent\": \"N\"\n    },\n    ...\n  ],\n  \"symbol\": \"AAPL\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "BasicFinancials": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "metricType": {
          "description": "Metric type.",
          "type": "string"
        },
        "series": {
          "type": "object",
          "$ref": "#/definitions/MetricSeriesMap",
          "description": "Map key-value pair of time-series ratios."
        },
        "metric": {
          "type": "object",
          "$ref": "#/definitions/MetricMap",
          "description": "Map key-value pair of key ratios and metrics."
        }
      }
    },
    "BreakdownItem": {
      "type": "object",
      "properties": {
        "accessNumber": {
          "description": "Access number of the report from which the data is sourced.",
          "type": "string"
        },
        "breakdown": {
          "type": "object",
          "$ref": "#/definitions/BreakdownItemMap",
          "description": "Revenue breakdown."
        }
      }
    },
    "BreakdownItemMap": {
      "type": "object"
    },
    "Company": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Executive name",
          "type": "string"
        },
        "age": {
          "description": "Age",
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "description": "Title",
          "type": "string"
        },
        "since": {
          "description": "Year first appointed as executive/director of the company",
          "type": "string"
        },
        "sex": {
          "description": "Sex",
          "type": "string"
        },
        "compensation": {
          "description": "Total compensation",
          "type": "integer",
          "format": "int64"
        },
        "currency": {
          "description": "Compensation currency",
          "type": "string"
        }
      }
    },
    "CompanyESG": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "symbol",
          "type": "string"
        },
        "totalESGScore": {
          "description": "Total ESG Score",
          "type": "number",
          "format": "float"
        },
        "environmentScore": {
          "description": "Environment Score",
          "type": "number",
          "format": "float"
        },
        "governanceScore": {
          "description": "Governance Score",
          "type": "number",
          "format": "float"
        },
        "socialScore": {
          "description": "Social Score",
          "type": "number",
          "format": "float"
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/CompanyESGMap",
          "description": "Map key-value pair of key ESG data points."
        }
      }
    },
    "CompanyESG2": {
      "type": "object",
      "properties": {
        "totalESGScore": {
          "description": "Total ESG Score",
          "type": "number",
          "format": "float"
        },
        "environmentScore": {
          "description": "Environment Score",
          "type": "number",
          "format": "float"
        },
        "governanceScore": {
          "description": "Governance Score",
          "type": "number",
          "format": "float"
        },
        "socialScore": {
          "description": "Social Score",
          "type": "number",
          "format": "float"
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/CompanyESGMap",
          "description": "Map key-value pair of key ESG data points."
        },
        "period": {
          "description": "Period",
          "type": "string"
        }
      }
    },
    "CompanyESGMap": {
      "type": "object"
    },
    "CompanyEarningsQualityScore": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "freq": {
          "description": "Frequency",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyEarningsQualityScoreData"
          },
          "description": "Array of earnings quality score."
        }
      }
    },
    "CompanyEarningsQualityScoreData": {
      "type": "object",
      "properties": {
        "period": {
          "description": "Period",
          "type": "string"
        },
        "growth": {
          "description": "Growth Score",
          "type": "number",
          "format": "float"
        },
        "profitability": {
          "description": "Profitability Score",
          "type": "number",
          "format": "float"
        },
        "cashGenerationCapitalAllocation": {
          "description": "Cash Generation and Capital Allocation",
          "type": "number",
          "format": "float"
        },
        "leverage": {
          "description": "Leverage Score",
          "type": "number",
          "format": "float"
        },
        "score": {
          "description": "Total Score",
          "type": "number",
          "format": "float"
        },
        "letterScore": {
          "description": "Letter Score",
          "type": "string"
        }
      }
    },
    "CompanyExecutive": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "executive": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Company"
          },
          "description": "Array of company's executives and members of the Board."
        }
      }
    },
    "CompanyProfile": {
      "type": "object",
      "properties": {
        "alias": {
          "description": "Company name alias.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "address": {
          "description": "Address of company's headquarter.",
          "type": "string"
        },
        "city": {
          "description": "City of company's headquarter.",
          "type": "string"
        },
        "country": {
          "description": "Country of company's headquarter.",
          "type": "string"
        },
        "currency": {
          "description": "Currency used in company filings and financials.",
          "type": "string"
        },
        "estimateCurrency": {
          "description": "Currency used in Estimates data.",
          "type": "string"
        },
        "marketCapCurrency": {
          "description": "Currency used in market capitalization.",
          "type": "string"
        },
        "cusip": {
          "description": "CUSIP number.",
          "type": "string"
        },
        "sedol": {
          "description": "Sedol number.",
          "type": "string"
        },
        "description": {
          "description": "Company business summary.",
          "type": "string"
        },
        "exchange": {
          "description": "Listed exchange.",
          "type": "string"
        },
        "ggroup": {
          "description": "Industry group.",
          "type": "string"
        },
        "gind": {
          "description": "Industry.",
          "type": "string"
        },
        "gsector": {
          "description": "Sector.",
          "type": "string"
        },
        "gsubind": {
          "description": "Sub-industry.",
          "type": "string"
        },
        "isin": {
          "description": "ISIN number.",
          "type": "string"
        },
        "lei": {
          "description": "LEI number.",
          "type": "string"
        },
        "irUrl": {
          "description": "Investor relations website.",
          "type": "string"
        },
        "naicsNationalIndustry": {
          "description": "NAICS national industry.",
          "type": "string"
        },
        "naics": {
          "description": "NAICS industry.",
          "type": "string"
        },
        "naicsSector": {
          "description": "NAICS sector.",
          "type": "string"
        },
        "naicsSubsector": {
          "description": "NAICS subsector.",
          "type": "string"
        },
        "name": {
          "description": "Company name.",
          "type": "string"
        },
        "phone": {
          "description": "Company phone number.",
          "type": "string"
        },
        "state": {
          "description": "State of company's headquarter.",
          "type": "string"
        },
        "ticker": {
          "description": "Company symbol/ticker as used on the listed exchange.",
          "type": "string"
        },
        "weburl": {
          "description": "Company website.",
          "type": "string"
        },
        "ipo": {
          "description": "IPO date.",
          "type": "string",
          "format": "date"
        },
        "marketCapitalization": {
          "description": "Market Capitalization.",
          "type": "number",
          "format": "float"
        },
        "shareOutstanding": {
          "description": "Number of oustanding shares.",
          "type": "number",
          "format": "float"
        },
        "employeeTotal": {
          "description": "Number of employee.",
          "type": "number",
          "format": "float"
        },
        "logo": {
          "description": "Logo image.",
          "type": "string"
        },
        "finnhubIndustry": {
          "description": "Finnhub industry classification.",
          "type": "string"
        }
      }
    },
    "CompanyProfile2": {
      "type": "object",
      "properties": {
        "country": {
          "description": "Country of company's headquarter.",
          "type": "string"
        },
        "currency": {
          "description": "Currency used in company filings.",
          "type": "string"
        },
        "exchange": {
          "description": "Listed exchange.",
          "type": "string"
        },
        "name": {
          "description": "Company name.",
          "type": "string"
        },
        "ticker": {
          "description": "Company symbol/ticker as used on the listed exchange.",
          "type": "string"
        },
        "ipo": {
          "description": "IPO date.",
          "type": "string",
          "format": "date"
        },
        "marketCapitalization": {
          "description": "Market Capitalization.",
          "type": "number",
          "format": "float"
        },
        "shareOutstanding": {
          "description": "Number of oustanding shares.",
          "type": "number",
          "format": "float"
        },
        "logo": {
          "description": "Logo image.",
          "type": "string"
        },
        "phone": {
          "description": "Company phone number.",
          "type": "string"
        },
        "weburl": {
          "description": "Company website.",
          "type": "string"
        },
        "finnhubIndustry": {
          "description": "Finnhub industry classification.",
          "type": "string"
        }
      }
    },
    "CongressionalTrading": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CongressionalTransaction"
          },
          "description": "Array of stock trades."
        }
      }
    },
    "CongressionalTransaction": {
      "type": "object",
      "properties": {
        "amountFrom": {
          "description": "Transaction amount from.",
          "type": "number",
          "format": "float"
        },
        "amountTo": {
          "description": "Transaction amount to.",
          "type": "number",
          "format": "float"
        },
        "assetName": {
          "description": "Asset name.",
          "type": "string"
        },
        "filingDate": {
          "description": "Filing date.",
          "type": "string"
        },
        "name": {
          "description": "Name of the representative.",
          "type": "string"
        },
        "ownerType": {
          "description": "Owner Type.",
          "type": "string"
        },
        "position": {
          "description": "Position.",
          "type": "string"
        },
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "transactionDate": {
          "description": "Transaction date.",
          "type": "string"
        },
        "transactionType": {
          "description": "Transaction type <code>Sale</code> or <code>Purchase</code>.",
          "type": "string"
        }
      }
    },
    "Dividends": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "date": {
          "description": "Ex-Dividend date.",
          "type": "string",
          "format": "date"
        },
        "amount": {
          "description": "Amount in local currency.",
          "type": "number",
          "format": "float"
        },
        "adjustedAmount": {
          "description": "Adjusted dividend.",
          "type": "number",
          "format": "float"
        },
        "payDate": {
          "description": "Pay date.",
          "type": "string",
          "format": "date"
        },
        "recordDate": {
          "description": "Record date.",
          "type": "string",
          "format": "date"
        },
        "declarationDate": {
          "description": "Declaration date.",
          "type": "string",
          "format": "date"
        },
        "currency": {
          "description": "Currency.",
          "type": "string"
        },
        "freq": {
          "description": "<p>Dividend frequency. Can be 1 of the following values:</p><ul>\n<li><code>0: Annually</code></li>\n<li><code>1: Monthly</code></li>\n<li><code>2: Quarterly</code></li>\n<li><code>3: Semi-annually</code></li>\n<li><code>4: Other/Unknown</code></li>\n<li><code>5: Bimonthly</code></li>\n<li><code>6: Trimesterly</code></li>\n<li><code>7: Weekly</code></li>\n</ul>",
          "type": "string"
        }
      }
    },
    "Dividends2": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dividends2Info"
          },
          "description": ""
        }
      }
    },
    "Dividends2Info": {
      "type": "object",
      "properties": {
        "exDate": {
          "description": "Ex-Dividend date.",
          "type": "string",
          "format": "date"
        },
        "amount": {
          "description": "Amount in local currency.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "EarningResult": {
      "type": "object",
      "properties": {
        "actual": {
          "description": "Actual earning result.",
          "type": "number",
          "format": "float"
        },
        "estimate": {
          "description": "Estimated earning.",
          "type": "number",
          "format": "float"
        },
        "surprise": {
          "description": "Surprise - The difference between actual and estimate.",
          "type": "number",
          "format": "float"
        },
        "surprisePercent": {
          "description": "Surprise percent.",
          "type": "number",
          "format": "float"
        },
        "period": {
          "description": "Reported period.",
          "type": "string",
          "format": "date"
        },
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "year": {
          "description": "Fiscal year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Fiscal quarter.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EarningsCallLive": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EarningsCallLiveResult"
          },
          "description": "Array of earnings call events that support live streaming."
        }
      }
    },
    "EarningsCallLiveResult": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "event": {
          "description": "Event name.",
          "type": "string"
        },
        "time": {
          "description": "Date time in UTC.",
          "type": "string",
          "format": "datetime"
        },
        "year": {
          "description": "Earnings year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Earnings quarter.",
          "type": "integer",
          "format": "int64"
        },
        "liveAudio": {
          "description": "Live audio streaming file.",
          "type": "string"
        },
        "recording": {
          "description": "Recoding in mp3 format.",
          "type": "string"
        }
      }
    },
    "EarningsCallTranscripts": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "transcript": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TranscriptContent"
          },
          "description": "Transcript content."
        },
        "participant": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TranscriptParticipant"
          },
          "description": "Participant list"
        },
        "audio": {
          "description": "Audio link.",
          "type": "string"
        },
        "id": {
          "description": "Transcript's ID.",
          "type": "string"
        },
        "title": {
          "description": "Title.",
          "type": "string"
        },
        "time": {
          "description": "Time of the event.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "year": {
          "description": "Year of earnings result in the case of earnings call transcript.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Quarter of earnings result in the case of earnings call transcript.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EarningsCallTranscriptsList": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "transcripts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockTranscripts"
          },
          "description": "Array of transcripts' metadata"
        }
      }
    },
    "EarningsEstimates": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EarningsEstimatesInfo"
          },
          "description": "List of estimates"
        },
        "freq": {
          "description": "Frequency: annual or quarterly.",
          "type": "string"
        },
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        }
      }
    },
    "EarningsEstimatesInfo": {
      "type": "object",
      "properties": {
        "epsAvg": {
          "description": "Average EPS estimates including Finnhub's proprietary estimates.",
          "type": "number",
          "format": "float"
        },
        "epsHigh": {
          "description": "Highest estimate.",
          "type": "number",
          "format": "float"
        },
        "epsLow": {
          "description": "Lowest estimate.",
          "type": "number",
          "format": "float"
        },
        "numberAnalysts": {
          "description": "Number of Analysts.",
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "description": "Period.",
          "type": "string",
          "format": "date"
        },
        "year": {
          "description": "Fiscal year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Fiscal quarter.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EbitEstimates": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EbitEstimatesInfo"
          },
          "description": "List of estimates"
        },
        "freq": {
          "description": "Frequency: annual or quarterly.",
          "type": "string"
        },
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        }
      }
    },
    "EbitEstimatesInfo": {
      "type": "object",
      "properties": {
        "ebitAvg": {
          "description": "Average EBIT estimates including Finnhub's proprietary estimates.",
          "type": "number",
          "format": "float"
        },
        "ebitHigh": {
          "description": "Highest estimate.",
          "type": "number",
          "format": "float"
        },
        "ebitLow": {
          "description": "Lowest estimate.",
          "type": "number",
          "format": "float"
        },
        "numberAnalysts": {
          "description": "Number of Analysts.",
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "description": "Period.",
          "type": "string",
          "format": "date"
        },
        "year": {
          "description": "Fiscal year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Fiscal quarter.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EbitdaEstimates": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EbitdaEstimatesInfo"
          },
          "description": "List of estimates"
        },
        "freq": {
          "description": "Frequency: annual or quarterly.",
          "type": "string"
        },
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        }
      }
    },
    "EbitdaEstimatesInfo": {
      "type": "object",
      "properties": {
        "ebitdaAvg": {
          "description": "Average EBITDA estimates including Finnhub's proprietary estimates.",
          "type": "number",
          "format": "float"
        },
        "ebitdaHigh": {
          "description": "Highest estimate.",
          "type": "number",
          "format": "float"
        },
        "ebitdaLow": {
          "description": "Lowest estimate.",
          "type": "number",
          "format": "float"
        },
        "numberAnalysts": {
          "description": "Number of Analysts.",
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "description": "Period.",
          "type": "string",
          "format": "date"
        },
        "year": {
          "description": "Fiscal year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Fiscal quarter.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EmployeeCount": {
      "type": "object",
      "properties": {
        "atDate": {
          "description": "Date of the reading",
          "type": "string"
        },
        "employee": {
          "description": "Value",
          "type": "number",
          "format": "float"
        }
      }
    },
    "Filing": {
      "type": "object",
      "properties": {
        "accessNumber": {
          "description": "Access number.",
          "type": "string"
        },
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "cik": {
          "description": "CIK.",
          "type": "string"
        },
        "form": {
          "description": "Form type.",
          "type": "string"
        },
        "filedDate": {
          "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "acceptedDate": {
          "description": "Accepted date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "reportUrl": {
          "description": "Report's URL.",
          "type": "string"
        },
        "filingUrl": {
          "description": "Filing's URL.",
          "type": "string"
        }
      }
    },
    "FilingSentiment": {
      "type": "object",
      "properties": {
        "negative": {
          "description": "% of negative words in the filing.",
          "type": "number",
          "format": "float"
        },
        "positive": {
          "description": "% of positive words in the filing.",
          "type": "number",
          "format": "float"
        },
        "polarity": {
          "description": "% of polarity words in the filing.",
          "type": "number",
          "format": "float"
        },
        "litigious": {
          "description": "% of litigious words in the filing.",
          "type": "number",
          "format": "float"
        },
        "uncertainty": {
          "description": "% of uncertainty words in the filing.",
          "type": "number",
          "format": "float"
        },
        "constraining": {
          "description": "% of constraining words in the filing.",
          "type": "number",
          "format": "float"
        },
        "modal-weak": {
          "description": "% of modal-weak words in the filing.",
          "type": "number",
          "format": "float"
        },
        "modal-strong": {
          "description": "% of modal-strong words in the filing.",
          "type": "number",
          "format": "float"
        },
        "modal-moderate": {
          "description": "% of modal-moderate words in the filing.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "FinancialMap": {
      "type": "object"
    },
    "FinancialStatements": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "financials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialMap"
          },
          "description": "An array of map of key, value pairs containing the data for each period."
        }
      }
    },
    "FinancialsAsReported": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "cik": {
          "description": "CIK",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Report"
          },
          "description": "Array of filings."
        }
      }
    },
    "FundOwnership": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "ownership": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundOwnershipInfo"
          },
          "description": "Array of investors with detailed information about their holdings."
        }
      }
    },
    "FundOwnershipInfo": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Investor's name.",
          "type": "string"
        },
        "share": {
          "description": "Number of shares held by the investor.",
          "type": "integer",
          "format": "int64"
        },
        "change": {
          "description": "Number of share changed (net buy or sell) from the last period.",
          "type": "integer",
          "format": "int64"
        },
        "filingDate": {
          "description": "Filing date.",
          "type": "string",
          "format": "date"
        },
        "portfolioPercent": {
          "description": "Percent of the fund's portfolio comprised of the company's share.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "HistoricalCompanyESG": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "symbol",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyESG2"
          },
          "description": "Historical ESG data points."
        }
      }
    },
    "HistoricalEmployeeCount": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeCount"
          },
          "description": "Array of market data."
        },
        "symbol": {
          "description": "Symbol",
          "type": "string"
        }
      }
    },
    "HistoricalMarketCapData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketCapData"
          },
          "description": "Array of market data."
        },
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "currency": {
          "description": "Currency",
          "type": "string"
        }
      }
    },
    "HistoricalNBBO": {
      "type": "object",
      "properties": {
        "s": {
          "description": "Symbol.",
          "type": "string"
        },
        "skip": {
          "description": "Number of ticks skipped.",
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "description": "Number of ticks returned. If <code>count</code> < <code>limit</code>, all data for that date has been returned.",
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "description": "Total number of ticks for that date.",
          "type": "integer",
          "format": "int64"
        },
        "av": {
          "type": "array",
          "description": "List of Ask volume data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "a": {
          "type": "array",
          "description": "List of Ask price data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ax": {
          "type": "array",
          "description": "List of venues/exchanges - Ask price. A list of exchange codes can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",>here</a>",
          "items": {
            "type": "string"
          }
        },
        "bv": {
          "type": "array",
          "description": "List of Bid volume data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "b": {
          "type": "array",
          "description": "List of Bid price data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "bx": {
          "type": "array",
          "description": "List of venues/exchanges - Bid price. A list of exchange codes can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",>here</a>",
          "items": {
            "type": "string"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp in UNIX ms.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "c": {
          "type": "array",
          "description": "List of quote conditions. A comprehensive list of quote conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1iiA6e7Osdtai0oPMOUzgAIKXCsay89dFDmsegz6OpEg/edit?usp=sharing\">here</a>",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "InsiderSentiments": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsiderSentimentsData"
          },
          "description": "Array of sentiment data."
        }
      }
    },
    "InsiderSentimentsData": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "year": {
          "description": "Year.",
          "type": "integer",
          "format": "int64"
        },
        "month": {
          "description": "Month.",
          "type": "integer",
          "format": "int64"
        },
        "change": {
          "description": "Net buying/selling from all insiders' transactions.",
          "type": "integer",
          "format": "int64"
        },
        "mspr": {
          "description": "Monthly share purchase ratio.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "InsiderTransactions": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transactions"
          },
          "description": "Array of insider transactions."
        }
      }
    },
    "InternationalFiling": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "companyName": {
          "description": "Company name.",
          "type": "string"
        },
        "filedDate": {
          "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "category": {
          "description": "Category.",
          "type": "string"
        },
        "title": {
          "description": "Document's title.",
          "type": "string"
        },
        "description": {
          "description": "Document's description.",
          "type": "string"
        },
        "url": {
          "description": "Url.",
          "type": "string"
        },
        "language": {
          "description": "Language.",
          "type": "string"
        },
        "country": {
          "description": "Country.",
          "type": "string"
        }
      }
    },
    "InvestmentThemePortfolio": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        }
      }
    },
    "InvestmentThemes": {
      "type": "object",
      "properties": {
        "theme": {
          "description": "Investment theme",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvestmentThemePortfolio"
          },
          "description": "Investment theme portfolio."
        }
      }
    },
    "KeyCustomersSuppliers": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "name": {
          "description": "Name",
          "type": "string"
        },
        "country": {
          "description": "Country",
          "type": "string"
        },
        "industry": {
          "description": "Industry",
          "type": "string"
        },
        "customer": {
          "description": "Whether the company is a customer.",
          "type": "boolean"
        },
        "supplier": {
          "description": "Whether the company is a supplier",
          "type": "boolean"
        },
        "oneMonthCorrelation": {
          "description": "1-month price correlation",
          "type": "number",
          "format": "float"
        },
        "oneYearCorrelation": {
          "description": "1-year price correlation",
          "type": "number",
          "format": "float"
        },
        "sixMonthCorrelation": {
          "description": "6-month price correlation",
          "type": "number",
          "format": "float"
        },
        "threeMonthCorrelation": {
          "description": "3-month price correlation",
          "type": "number",
          "format": "float"
        },
        "twoWeekCorrelation": {
          "description": "2-week price correlation",
          "type": "number",
          "format": "float"
        },
        "twoYearCorrelation": {
          "description": "2-year price correlation",
          "type": "number",
          "format": "float"
        }
      }
    },
    "LastBid-Ask": {
      "type": "object",
      "properties": {
        "b": {
          "description": "Bid price.",
          "type": "number",
          "format": "float"
        },
        "a": {
          "description": "Ask price.",
          "type": "number",
          "format": "float"
        },
        "bv": {
          "description": "Bid volume.",
          "type": "number",
          "format": "float"
        },
        "av": {
          "description": "Ask volume.",
          "type": "number",
          "format": "float"
        },
        "t": {
          "description": "Reference UNIX timestamp in ms.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LobbyingData": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "name": {
          "description": "Company's name.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "country": {
          "description": "Country.",
          "type": "string"
        },
        "year": {
          "description": "Year.",
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "description": "Period.",
          "type": "string"
        },
        "income": {
          "description": "Income reported by lobbying firms.",
          "type": "number",
          "format": "float"
        },
        "expenses": {
          "description": "Expenses reported by the company.",
          "type": "number",
          "format": "float"
        },
        "documentUrl": {
          "description": "Document's URL.",
          "type": "string"
        },
        "postedName": {
          "description": "Posted name.",
          "type": "string"
        },
        "date": {
          "description": "Date.",
          "type": "string"
        },
        "clientId": {
          "description": "Client ID.",
          "type": "string"
        },
        "registrantId": {
          "description": "Registrant ID.",
          "type": "string"
        },
        "senateId": {
          "description": "Senate ID.",
          "type": "string"
        },
        "houseregistrantId": {
          "description": "House registrant ID.",
          "type": "string"
        }
      }
    },
    "LobbyingResult": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LobbyingData"
          },
          "description": "Array of lobbying activities."
        }
      }
    },
    "MarketCapData": {
      "type": "object",
      "properties": {
        "atDate": {
          "description": "Date of the reading",
          "type": "string"
        },
        "marketCapitalization": {
          "description": "Value",
          "type": "number",
          "format": "float"
        }
      }
    },
    "MarketHoliday": {
      "type": "object",
      "properties": {
        "timezone": {
          "description": "Timezone.",
          "type": "string"
        },
        "exchange": {
          "description": "Exchange.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketHolidayData"
          },
          "description": "Array of holidays."
        }
      }
    },
    "MarketHolidayData": {
      "type": "object",
      "properties": {
        "eventName": {
          "description": "Holiday's name.",
          "type": "string"
        },
        "atDate": {
          "description": "Date.",
          "type": "string"
        },
        "tradingHour": {
          "description": "Trading hours for this day if the market is partially closed only.",
          "type": "string"
        }
      }
    },
    "MarketStatus": {
      "type": "object",
      "properties": {
        "exchange": {
          "description": "Exchange.",
          "type": "string"
        },
        "timezone": {
          "description": "Timezone.",
          "type": "string"
        },
        "session": {
          "description": "Market session. Can be 1 of the following values: <code>pre-market</code>,<code>regular</code>,<code>post-market</code> or <code>null</code> if the market is closed.",
          "type": "string"
        },
        "holiday": {
          "description": "Holiday event.",
          "type": "string"
        },
        "isOpen": {
          "description": "Whether the market is open at the moment.",
          "type": "boolean"
        },
        "t": {
          "description": "Current timestamp.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MetricMap": {
      "type": "object"
    },
    "MetricSeriesMap": {
      "type": "object"
    },
    "Ownership": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "ownership": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnershipInfo"
          },
          "description": "Array of investors with detailed information about their holdings."
        }
      }
    },
    "OwnershipInfo": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Investor's name.",
          "type": "string"
        },
        "share": {
          "description": "Number of shares held by the investor.",
          "type": "integer",
          "format": "int64"
        },
        "change": {
          "description": "Number of share changed (net buy or sell) from the last period.",
          "type": "integer",
          "format": "int64"
        },
        "filingDate": {
          "description": "Filing date.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "PresentationData": {
      "type": "object",
      "properties": {
        "quarter": {
          "description": "Quarter",
          "type": "integer",
          "format": "int64"
        },
        "year": {
          "description": "Year",
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "description": "Presentation url",
          "type": "string"
        },
        "title": {
          "description": "Title",
          "type": "string"
        },
        "atTime": {
          "description": "At Time.",
          "type": "string",
          "formatIgnore": "date-time"
        }
      }
    },
    "PriceMetricMap": {
      "type": "object"
    },
    "PriceMetrics": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol of the company.",
          "type": "string"
        },
        "atDate": {
          "description": "Data date.",
          "type": "string"
        },
        "data": {
          "type": "object",
          "$ref": "#/definitions/PriceMetricMap",
          "description": "Map key-value pair of key ratios and metrics."
        }
      }
    },
    "PriceTarget": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "targetHigh": {
          "description": "Highes analysts' target.",
          "type": "number",
          "format": "float"
        },
        "targetLow": {
          "description": "Lowest analysts' target.",
          "type": "number",
          "format": "float"
        },
        "targetMean": {
          "description": "Mean of all analysts' targets.",
          "type": "number",
          "format": "float"
        },
        "targetMedian": {
          "description": "Median of all analysts' targets.",
          "type": "number",
          "format": "float"
        },
        "numberAnalysts": {
          "description": "Number of Analysts.",
          "type": "integer",
          "format": "int64"
        },
        "lastUpdated": {
          "description": "Updated time of the data",
          "type": "string",
          "formatIgnore": "date-time"
        }
      }
    },
    "Quote": {
      "type": "object",
      "properties": {
        "o": {
          "description": "Open price of the day",
          "type": "number",
          "format": "float"
        },
        "h": {
          "description": "High price of the day",
          "type": "number",
          "format": "float"
        },
        "l": {
          "description": "Low price of the day",
          "type": "number",
          "format": "float"
        },
        "c": {
          "description": "Current price",
          "type": "number",
          "format": "float"
        },
        "pc": {
          "description": "Previous close price",
          "type": "number",
          "format": "float"
        },
        "d": {
          "description": "Change",
          "type": "number",
          "format": "float"
        },
        "dp": {
          "description": "Percent change",
          "type": "number",
          "format": "float"
        }
      }
    },
    "RecommendationTrend": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "buy": {
          "description": "Number of recommendations that fall into the Buy category",
          "type": "integer",
          "format": "int64"
        },
        "hold": {
          "description": "Number of recommendations that fall into the Hold category",
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "description": "Updated period",
          "type": "string"
        },
        "sell": {
          "description": "Number of recommendations that fall into the Sell category",
          "type": "integer",
          "format": "int64"
        },
        "strongBuy": {
          "description": "Number of recommendations that fall into the Strong Buy category",
          "type": "integer",
          "format": "int64"
        },
        "strongSell": {
          "description": "Number of recommendations that fall into the Strong Sell category",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Report": {
      "type": "object",
      "properties": {
        "accessNumber": {
          "description": "Access number.",
          "type": "string"
        },
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "cik": {
          "description": "CIK.",
          "type": "string"
        },
        "year": {
          "description": "Year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Quarter.",
          "type": "integer",
          "format": "int64"
        },
        "form": {
          "description": "Form type.",
          "type": "string"
        },
        "startDate": {
          "description": "Period start date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "endDate": {
          "description": "Period end date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "filedDate": {
          "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "acceptedDate": {
          "description": "Accepted date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "report": {
          "type": "object",
          "$ref": "#/definitions/ReportDataMap",
          "description": "Report data."
        }
      }
    },
    "ReportDataMap": {
      "type": "object"
    },
    "RevenueBreakdown": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "cik": {
          "description": "CIK",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BreakdownItem"
          },
          "description": "Array of revenue breakdown over multiple periods."
        }
      }
    },
    "RevenueBreakdown2": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol",
          "type": "string"
        },
        "currency": {
          "description": "currency",
          "type": "string"
        },
        "data": {
          "type": "object",
          "description": "Revenue breakdown data."
        }
      }
    },
    "RevenueEstimates": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RevenueEstimatesInfo"
          },
          "description": "List of estimates"
        },
        "freq": {
          "description": "Frequency: annual or quarterly.",
          "type": "string"
        },
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        }
      }
    },
    "RevenueEstimatesInfo": {
      "type": "object",
      "properties": {
        "revenueAvg": {
          "description": "Average revenue estimates including Finnhub's proprietary estimates.",
          "type": "number",
          "format": "float"
        },
        "revenueHigh": {
          "description": "Highest estimate.",
          "type": "number",
          "format": "float"
        },
        "revenueLow": {
          "description": "Lowest estimate.",
          "type": "number",
          "format": "float"
        },
        "numberAnalysts": {
          "description": "Number of Analysts.",
          "type": "integer",
          "format": "int64"
        },
        "period": {
          "description": "Period.",
          "type": "string",
          "format": "date"
        },
        "year": {
          "description": "Fiscal year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Fiscal quarter.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SECSentimentAnalysis": {
      "type": "object",
      "properties": {
        "accessNumber": {
          "description": "Access number.",
          "type": "string"
        },
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "cik": {
          "description": "CIK.",
          "type": "string"
        },
        "sentiment": {
          "type": "object",
          "$ref": "#/definitions/FilingSentiment",
          "description": "Filing Sentiment"
        }
      }
    },
    "SentimentContent": {
      "type": "object",
      "properties": {
        "mention": {
          "description": "Number of mentions",
          "type": "integer",
          "format": "int64"
        },
        "positiveMention": {
          "description": "Number of positive mentions",
          "type": "integer",
          "format": "int64"
        },
        "negativeMention": {
          "description": "Number of negative mentions",
          "type": "integer",
          "format": "int64"
        },
        "positiveScore": {
          "description": "Positive score. Range 0-1",
          "type": "number",
          "format": "float"
        },
        "negativeScore": {
          "description": "Negative score. Range 0-1",
          "type": "number",
          "format": "float"
        },
        "score": {
          "description": "Final score. Range: -1 to 1 with 1 is very positive and -1 is very negative",
          "type": "number",
          "format": "float"
        },
        "atTime": {
          "description": "Period.",
          "type": "string",
          "formatIgnore": "date-time"
        }
      }
    },
    "SimilarityIndex": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "cik": {
          "description": "CIK.",
          "type": "string"
        },
        "similarity": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimilarityIndexInfo"
          },
          "description": "Array of filings with its cosine similarity compared to the same report of the previous year."
        }
      }
    },
    "SimilarityIndexInfo": {
      "type": "object",
      "properties": {
        "cik": {
          "description": "CIK.",
          "type": "string"
        },
        "item1": {
          "description": "Cosine similarity of Item 1 (Business). This number is only available for Annual reports.",
          "type": "number",
          "format": "float"
        },
        "item1a": {
          "description": "Cosine similarity of Item 1A (Risk Factors). This number is available for both Annual and Quarterly reports.",
          "type": "number",
          "format": "float"
        },
        "item2": {
          "description": "Cosine similarity of Item 2 (Management\u2019s Discussion and Analysis of Financial Condition and Results of Operations). This number is only available for Quarterly reports.",
          "type": "number",
          "format": "float"
        },
        "item7": {
          "description": "Cosine similarity of Item 7 (Management\u2019s Discussion and Analysis of Financial Condition and Results of Operations). This number is only available for Annual reports.",
          "type": "number",
          "format": "float"
        },
        "item7a": {
          "description": "Cosine similarity of Item 7A (Quantitative and Qualitative Disclosures About Market Risk). This number is only available for Annual reports.",
          "type": "number",
          "format": "float"
        },
        "accessNumber": {
          "description": "Access number.",
          "type": "string"
        },
        "form": {
          "description": "Form type.",
          "type": "string"
        },
        "filedDate": {
          "description": "Filed date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "acceptedDate": {
          "description": "Accepted date <code>%Y-%m-%d %H:%M:%S</code>.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "reportUrl": {
          "description": "Report's URL.",
          "type": "string"
        },
        "filingUrl": {
          "description": "Filing's URL.",
          "type": "string"
        }
      }
    },
    "SocialSentiment": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentimentContent"
          },
          "description": "Sentiment data."
        }
      }
    },
    "Split": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "date": {
          "description": "Split date.",
          "type": "string",
          "format": "date"
        },
        "fromFactor": {
          "description": "From factor.",
          "type": "number",
          "format": "float"
        },
        "toFactor": {
          "description": "To factor.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "StockCandles": {
      "type": "object",
      "properties": {
        "o": {
          "type": "array",
          "description": "List of open prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "h": {
          "type": "array",
          "description": "List of high prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "l": {
          "type": "array",
          "description": "List of low prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "c": {
          "type": "array",
          "description": "List of close prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "v": {
          "type": "array",
          "description": "List of volume data for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp for returned candles.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "s": {
          "description": "Status of the response. This field can either be ok or no_data.",
          "type": "string"
        }
      }
    },
    "StockPresentation": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "res": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PresentationData"
          },
          "description": "Presentation data."
        }
      }
    },
    "StockSymbol": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Symbol description",
          "type": "string"
        },
        "displaySymbol": {
          "description": "Display symbol name.",
          "type": "string"
        },
        "symbol": {
          "description": "Unique symbol used to identify this symbol used in <code>/stock/candle</code> endpoint.",
          "type": "string"
        },
        "type": {
          "description": "Security type.",
          "type": "string"
        },
        "mic": {
          "description": "Primary exchange's MIC.",
          "type": "string"
        },
        "figi": {
          "description": "FIGI identifier.",
          "type": "string"
        },
        "shareClassFIGI": {
          "description": "Global Share Class FIGI.",
          "type": "string"
        },
        "currency": {
          "description": "Price's currency. This might be different from the reporting currency of fundamental data.",
          "type": "string"
        },
        "symbol2": {
          "description": "Alternative ticker for exchanges with multiple tickers for 1 stock such as BSE.",
          "type": "string"
        },
        "isin": {
          "description": "ISIN. This field is only available for EU stocks and selected Asian markets. Entitlement from Finnhub is required to access this field.",
          "type": "string"
        }
      }
    },
    "StockTranscripts": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Transcript's ID used to get the <a href=\"#transcripts\">full transcript</a>.",
          "type": "string"
        },
        "title": {
          "description": "Title.",
          "type": "string"
        },
        "time": {
          "description": "Time of the event.",
          "type": "string",
          "formatIgnore": "date-time"
        },
        "year": {
          "description": "Year of earnings result in the case of earnings call transcript.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Quarter of earnings result in the case of earnings call transcript.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SupplyChainRelationships": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "symbol",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCustomersSuppliers"
          },
          "description": "Key customers and suppliers."
        }
      }
    },
    "TickData": {
      "type": "object",
      "properties": {
        "s": {
          "description": "Symbol.",
          "type": "string"
        },
        "skip": {
          "description": "Number of ticks skipped.",
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "description": "Number of ticks returned. If <code>count</code> < <code>limit</code>, all data for that date has been returned.",
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "description": "Total number of ticks for that date.",
          "type": "integer",
          "format": "int64"
        },
        "v": {
          "type": "array",
          "description": "List of volume data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "p": {
          "type": "array",
          "description": "List of price data.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp in UNIX ms.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "x": {
          "type": "array",
          "description": "List of venues/exchanges. A list of exchange codes can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",>here</a>",
          "items": {
            "type": "string"
          }
        },
        "c": {
          "type": "array",
          "description": "List of trade conditions. A comprehensive list of trade conditions code can be found <a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1PUxiSWPHSODbaTaoL2Vef6DgU-yFtlRGZf19oBb9Hp0/edit?usp=sharing\">here</a>",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Transactions": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "name": {
          "description": "Insider's name.",
          "type": "string"
        },
        "share": {
          "description": "Number of shares held after the transaction.",
          "type": "integer",
          "format": "int64"
        },
        "change": {
          "description": "Number of share changed from the last period. A positive value suggests a <code>BUY</code> transaction. A negative value suggests a <code>SELL</code> transaction.",
          "type": "integer",
          "format": "int64"
        },
        "filingDate": {
          "description": "Filing date.",
          "type": "string",
          "format": "date"
        },
        "transactionDate": {
          "description": "Transaction date.",
          "type": "string",
          "format": "date"
        },
        "transactionPrice": {
          "description": "Average transaction price.",
          "type": "number",
          "format": "float"
        },
        "transactionCode": {
          "description": "Transaction code. A list of codes and their meanings can be found <a href=\"https://www.sec.gov/about/forms/form4data.pdf\" target=\"_blank\" rel=\"noopener\">here</a>.",
          "type": "string"
        }
      }
    },
    "TranscriptContent": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Speaker's name",
          "type": "string"
        },
        "speech": {
          "type": "array",
          "description": "Speaker's speech",
          "items": {
            "type": "string"
          }
        },
        "session": {
          "description": "Earnings calls section (management discussion or Q&A)",
          "type": "string"
        }
      }
    },
    "TranscriptParticipant": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Participant's name",
          "type": "string"
        },
        "description": {
          "description": "Participant's description",
          "type": "string"
        },
        "role": {
          "description": "Whether the speak is a company's executive or an analyst",
          "type": "string"
        }
      }
    },
    "UpgradeDowngrade": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Company symbol.",
          "type": "string"
        },
        "gradeTime": {
          "description": "Upgrade/downgrade time in UNIX timestamp.",
          "type": "integer",
          "format": "int64"
        },
        "fromGrade": {
          "description": "From grade.",
          "type": "string"
        },
        "toGrade": {
          "description": "To grade.",
          "type": "string"
        },
        "company": {
          "description": "Company/analyst who did the upgrade/downgrade.",
          "type": "string"
        },
        "action": {
          "description": "Action can take any of the following values: <code>up(upgrade), down(downgrade), main(maintains), init(initiate), reit(reiterate)</code>.",
          "type": "string"
        }
      }
    },
    "UsaSpending": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "recipientName": {
          "description": "Company's name.",
          "type": "string"
        },
        "recipientParentName": {
          "description": "Company's name.",
          "type": "string"
        },
        "awardDescription": {
          "description": "Description.",
          "type": "string"
        },
        "country": {
          "description": "Recipient's country.",
          "type": "string"
        },
        "actionDate": {
          "description": "Period.",
          "type": "string"
        },
        "totalValue": {
          "description": "Income reported by lobbying firms.",
          "type": "number",
          "format": "float"
        },
        "performanceStartDate": {
          "description": "Performance start date.",
          "type": "string"
        },
        "performanceEndDate": {
          "description": "Performance end date.",
          "type": "string"
        },
        "awardingAgencyName": {
          "description": "Award agency.",
          "type": "string"
        },
        "awardingSubAgencyName": {
          "description": "Award sub-agency.",
          "type": "string"
        },
        "awardingOfficeName": {
          "description": "Award office name.",
          "type": "string"
        },
        "performanceCountry": {
          "description": "Performance country.",
          "type": "string"
        },
        "performanceCity": {
          "description": "Performance city.",
          "type": "string"
        },
        "performanceCounty": {
          "description": "Performance county.",
          "type": "string"
        },
        "performanceState": {
          "description": "Performance state.",
          "type": "string"
        },
        "performanceZipCode": {
          "description": "Performance zip code.",
          "type": "string"
        },
        "performanceCongressionalDistrict": {
          "description": "Performance congressional district.",
          "type": "string"
        },
        "naicsCode": {
          "description": "NAICS code.",
          "type": "string"
        },
        "permalink": {
          "description": "Permalink.",
          "type": "string"
        }
      }
    },
    "UsaSpendingResult": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsaSpending"
          },
          "description": "Array of government's spending data points."
        }
      }
    },
    "UsptoPatent": {
      "type": "object",
      "properties": {
        "applicationNumber": {
          "description": "Application Number.",
          "type": "string"
        },
        "companyFilingName": {
          "type": "array",
          "description": "Array of companies' name on the patent.",
          "items": {
            "type": "string"
          }
        },
        "filingDate": {
          "description": "Filing date.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "filingStatus": {
          "description": "Filing status.",
          "type": "string"
        },
        "patentNumber": {
          "description": "Patent number.",
          "type": "string"
        },
        "publicationDate": {
          "description": "Publication date.",
          "type": "string"
        },
        "patentType": {
          "description": "Patent's type.",
          "type": "string"
        },
        "url": {
          "description": "URL of the original article.",
          "type": "string"
        }
      }
    },
    "UsptoPatentResult": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsptoPatent"
          },
          "description": "Array of patents."
        }
      }
    },
    "VisaApplication": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Year.",
          "type": "integer",
          "format": "int64"
        },
        "quarter": {
          "description": "Quarter.",
          "type": "integer",
          "format": "int64"
        },
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "caseNumber": {
          "description": "Case number.",
          "type": "string"
        },
        "caseStatus": {
          "description": "Case status.",
          "type": "string"
        },
        "receivedDate": {
          "description": "Received date.",
          "type": "string"
        },
        "visaClass": {
          "description": "Visa class.",
          "type": "string"
        },
        "jobTitle": {
          "description": "Job Title.",
          "type": "string"
        },
        "socCode": {
          "description": "SOC Code. A list of SOC code can be found <a href=\"https://www.bls.gov/oes/current/oes_stru.htm\" target=\"_blank\">here</a>.",
          "type": "string"
        },
        "fullTimePosition": {
          "description": "Full-time position flag.",
          "type": "string"
        },
        "beginDate": {
          "description": "Job's start date.",
          "type": "string"
        },
        "endDate": {
          "description": "Job's end date.",
          "type": "string"
        },
        "employerName": {
          "description": "Company's name.",
          "type": "string"
        },
        "worksiteAddress": {
          "description": "Worksite address.",
          "type": "string"
        },
        "worksiteCity": {
          "description": "Worksite city.",
          "type": "string"
        },
        "worksiteCounty": {
          "description": "Worksite county.",
          "type": "string"
        },
        "worksiteState": {
          "description": "Worksite state.",
          "type": "string"
        },
        "worksitePostalCode": {
          "description": "Worksite postal code.",
          "type": "string"
        },
        "wageRangeFrom": {
          "description": "Wage range from.",
          "type": "number",
          "format": "float"
        },
        "wageRangeTo": {
          "description": "Wage range to.",
          "type": "number",
          "format": "float"
        },
        "wageUnitOfPay": {
          "description": "Wage unit of pay.",
          "type": "string"
        },
        "wageLevel": {
          "description": "Wage level.",
          "type": "string"
        },
        "h1bDependent": {
          "description": "H1B dependent flag.",
          "type": "string"
        }
      }
    },
    "VisaApplicationResult": {
      "type": "object",
      "properties": {
        "symbol": {
          "description": "Symbol.",
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisaApplication"
          },
          "description": "Array of H1b and Permanent visa applications."
        }
      }
    }
  }
}