{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Finnhub API - Crypto",
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Finnhub API endpoints for crypto"
  },
  "host": "finnhub.io",
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "paths": {
    "/crypto/candle": {
      "get": {
        "summary": "Crypto Candles",
        "description": "Get candlestick data for crypto symbols.",
        "operationId": "crypto-candles",
        "navHeader": "Candles",
        "urlId": "crypto-candles",
        "title": "Crypto OHLCV API",
        "examples": [
          {
            "url": "/crypto/candle?symbol=BINANCE:BTCUSDT&resolution=D&from=1572651390&to=1575243390&token=<token>",
            "text": "/crypto/candle?symbol=BINANCE:BTCUSDT&resolution=D&from=1572651390&to=1575243390"
          }
        ],
        "widget": {
          "url": "https://widget.finnhub.io/widgets/stocks/chart?symbol=BINANCE:BTCUSDT&watermarkColor=%231db954&backgroundColor=%23222222&textColor=white"
        },
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Crypto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Use symbol returned in <code>/crypto/symbol</code> endpoint for this field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resolution",
            "description": "Supported resolution includes <code>1, 5, 15, 30, 60, D, W, M </code>.Some timeframes might not be available depending on the exchange.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "from",
            "description": "UNIX timestamp. Interval initial value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "to",
            "description": "UNIX timestamp. Interval end value.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CryptoCandles"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.crypto_candles('BINANCE:BTCUSDT', 'D', 1590988249, 1591852249))",
          "go": "res, _, err := finnhubClient.CryptoCandles(context.Background()).Symbol(\"BINANCE:BTCUSDT\").Resolution(\"D\").From(1590988249).To(1591852249).Execute()",
          "javascript": "finnhubClient.cryptoCandles(\"BINANCE:BTCUSDT\", \"D\", 1590988249, 1591852249, (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.crypto_candles('BINANCE:BTCUSDT', 'D', 1590988249, 1591852249))",
          "kotlin": "println(apiClient.cryptoCandles(\"BINANCE:BTCUSDT\", \"D\", 1590988249, 1591852249))",
          "php": "print_r($client->cryptoCandles(\"BINANCE:BTCUSDT\", \"D\", 1590988249, 1591852249));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"c\": [\n    1.10713,\n    1.10288,\n    1.10397,\n    1.10182\n  ],\n  \"h\": [\n    1.1074,\n    1.10751,\n    1.10729,\n    1.10595\n  ],\n  \"l\": [\n    1.09897,\n    1.1013,\n    1.10223,\n    1.10101\n  ],\n  \"o\": [\n    1.0996,\n    1.107,\n    1.10269,\n    1.10398\n  ],\n  \"s\": \"ok\",\n  \"t\": [\n    1568667600,\n    1568754000,\n    1568840400,\n    1568926800\n  ],\n  \"v\": [\n    75789,\n    75883,\n    73485,\n    5138\n  ]\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/crypto/exchange": {
      "get": {
        "summary": "Crypto Exchanges",
        "description": "List supported crypto exchanges",
        "operationId": "crypto-exchanges",
        "navHeader": "Exchanges",
        "urlId": "crypto-exchanges",
        "title": "Crypto Exchanges",
        "examples": [
          {
            "url": "/crypto/exchange?token=<token>",
            "text": "/crypto/exchange"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Crypto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.crypto_exchanges())",
          "go": "res, _, err := finnhubClient.CryptoExchanges(context.Background()).Execute()",
          "javascript": "finnhubClient.cryptoExchanges((error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.crypto_exchanges())",
          "kotlin": "println(apiClient.cryptoExchanges())",
          "php": "print_r($client->cryptoExchanges());",
          "useTemplate": true
        },
        "sampleResponse": "[\n  \"KRAKEN\",\n  \"HITBTC\",\n  \"COINBASE\",\n  \"GEMINI\",\n  \"POLONIEX\",\n  \"Binance\",\n  \"ZB\",\n  \"BITTREX\",\n  \"KUCOIN\",\n  \"OKEX\",\n  \"BITFINEX\",\n  \"HUOBI\"\n]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/crypto/profile": {
      "get": {
        "summary": "Crypto Profile",
        "description": "Get crypto's profile.",
        "operationId": "crypto-profile",
        "navHeader": "Profile",
        "urlId": "crypto-profile",
        "title": "Crypto Profile API",
        "examples": [
          {
            "url": "/crypto/profile?symbol=BTC&token=<token>",
            "text": "/crypto/profile?symbol=BTC"
          },
          {
            "url": "/crypto/profile?symbol=ETH&token=<token>",
            "text": "/crypto/profile?symbol=ETH"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": "Premium Access Required",
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Crypto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "symbol",
            "description": "Crypto symbol such as BTC or ETH.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CryptoProfile"
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.crypto_profile('BTC'))",
          "go": "res, _, err := finnhubClient.CryptoProfile(context.Background()).Symbol(\"BTC\").Execute()",
          "javascript": "finnhubClient.cryptoProfile(\"BTC\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.crypto_profile('BTC'))",
          "kotlin": "println(apiClient.cryptoProfile(\"BTC\"))",
          "php": "print_r($client->cryptoProfile(\"BTC\"));",
          "useTemplate": true
        },
        "sampleResponse": "{\n  \"name\": \"Bitcoin\",\n  \"longName\": \"Bitcoin (BTC)\",\n  \"description\": \"Bitcoin uses peer-to-peer technology to operate with no central authority or banks; managing transactions and the issuing of bitcoins is carried out collectively by the network. Although other cryptocurrencies have come before, Bitcoin is the first decentralized cryptocurrency - Its reputation has spawned copies and evolution in the space.With the largest variety of markets and the biggest value - having reached a peak of 318 billion USD - Bitcoin is here to stay. As with any new invention, there can be improvements or flaws in the initial model however the community and a team of dedicated developers are pushing to overcome any obstacle they come across. It is also the most traded cryptocurrency and one of the main entry points for all the other cryptocurrencies. The price is as unstable as always and it can go up or down by 10%-20% in a single day.Bitcoin is an SHA-256 POW coin with almost 21,000,000 total minable coins. The block time is 10 minutes. See below for a full range of Bitcoin markets where you can trade US Dollars for Bitcoin, crypto to Bitcoin and many other fiat currencies too.Bitcoin Whitepaper PDF - A Peer-to-Peer Electronic Cash SystemBlockchain data provided by: Blockchain (main source), Blockchair (backup)\",\n  \"marketCap\": 1119891535870.4905,\n  \"totalSupply\": 18876550,\n  \"maxSupply\": 21000000,\n  \"circulatingSupply\": 18876550,\n  \"logo\": \"\",\n  \"launchDate\": \"2009-01-03\",\n  \"website\": \"https://bitcoin.org/en/\",\n  \"proofType\": \"PoW\"\n}",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/crypto/symbol": {
      "get": {
        "summary": "Crypto Symbol",
        "description": "List supported crypto symbols by exchange",
        "operationId": "crypto-symbols",
        "navHeader": "Symbols",
        "urlId": "crypto-symbols",
        "title": "Crypto Symbols By Exchange",
        "examples": [
          {
            "url": "/crypto/symbol?exchange=binance&token=<token>",
            "text": "/crypto/symbol?exchange=binance"
          }
        ],
        "widget": null,
        "freeTier": null,
        "premium": null,
        "newEndpoint": null,
        "highUsage": null,
        "tags": [
          "Default"
        ],
        "section": "Crypto",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exchange",
            "description": "Exchange you want to get the list of symbols from.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CryptoSymbol"
              }
            }
          }
        },
        "sampleCode": {
          "curl": "autoGenerated",
          "python": "print(finnhub_client.crypto_symbols('BINANCE'))",
          "go": "res, _, err := finnhubClient.CryptoSymbols(context.Background()).Exchange(\"BINANCE\").Execute()",
          "javascript": "finnhubClient.cryptoSymbols(\"BINANCE\", (error, data, response) => {\n  console.log(data)\n});",
          "ruby": "puts(finnhub_client.crypto_symbols('BINANCE'))",
          "kotlin": "println(apiClient.cryptoSymbols(\"BINANCE\"))",
          "php": "print_r($client->cryptoSymbols(\"BINANCE\"));",
          "useTemplate": true
        },
        "sampleResponse": "[\n  {\n    \"description\": \"Binance ETHBTC\",\n    \"displaySymbol\": \"ETH/BTC\",\n    \"symbol\": \"ETHBTC\"\n  },\n  {\n    \"description\": \"Binance LTCBTC\",\n    \"displaySymbol\": \"LTC/BTC\",\n    \"symbol\": \"BINANCE:LTCBTC\"\n  },\n  {\n    \"description\": \"Binance BNBBTC\",\n    \"displaySymbol\": \"BNB/BTC\",\n    \"symbol\": \"BINANCE:BNBBTC\"\n  }]",
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "definitions": {
    "CryptoCandles": {
      "type": "object",
      "properties": {
        "o": {
          "type": "array",
          "description": "List of open prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "h": {
          "type": "array",
          "description": "List of high prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "l": {
          "type": "array",
          "description": "List of low prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "c": {
          "type": "array",
          "description": "List of close prices for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "v": {
          "type": "array",
          "description": "List of volume data for returned candles.",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "t": {
          "type": "array",
          "description": "List of timestamp for returned candles.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "s": {
          "description": "Status of the response. This field can either be ok or no_data.",
          "type": "string"
        }
      }
    },
    "CryptoProfile": {
      "type": "object",
      "properties": {
        "longName": {
          "description": "Long name.",
          "type": "string"
        },
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "website": {
          "description": "Project's website.",
          "type": "string"
        },
        "marketCap": {
          "description": "Market capitalization.",
          "type": "number",
          "format": "float"
        },
        "totalSupply": {
          "description": "Total supply.",
          "type": "number",
          "format": "float"
        },
        "maxSupply": {
          "description": "Max supply.",
          "type": "number",
          "format": "float"
        },
        "circulatingSupply": {
          "description": "Circulating supply.",
          "type": "number",
          "format": "float"
        },
        "logo": {
          "description": "Logo image.",
          "type": "string"
        },
        "launchDate": {
          "description": "Launch date.",
          "type": "string"
        },
        "proofType": {
          "description": "Proof type.",
          "type": "string"
        }
      }
    },
    "CryptoSymbol": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Symbol description",
          "type": "string"
        },
        "displaySymbol": {
          "description": "Display symbol name.",
          "type": "string"
        },
        "symbol": {
          "description": "Unique symbol used to identify this symbol used in <code>/crypto/candle</code> endpoint.",
          "type": "string"
        }
      }
    }
  }
}